import mc from'ip';import Ke from'picocolors';import Za from'cookie-parser';import ec from'cors';import bi from'dotenv';import To,{urlencoded}from'express';import sc from'helmet';import Ct from'passport';import {Strategy}from'passport-custom';import {hkdf}from'@panva/hkdf';import {jwtDecrypt,calculateJwkThumbprint,base64url,EncryptJWT}from'jose';import Ws,{hash}from'bcrypt';import {relations,and,eq,ilike,gte,lte,count,desc,not,isNull,asc,or,exists,inArray,sum}from'drizzle-orm';import {Strategy as Strategy$1}from'passport-google-oauth20';import {timestamp,pgEnum,pgTable,boolean,integer,json,text,varchar,serial,decimal,doublePrecision,primaryKey,uniqueIndex}from'drizzle-orm/pg-core';import {drizzle}from'drizzle-orm/postgres-js';import Vs from'postgres';import'express-rate-limit';import {z as z$1}from'zod';import Xi from'ejs';import Zi from'nodemailer';import ea,{join}from'path';import ia from'multer';import {v2}from'cloudinary';import {Configuration,PlaidEnvironments,PlaidApi,Products,CountryCode,TransferIntentCreateNetwork,ACHClass,TransferIntentCreateMode}from'plaid';import Vt from'axios';import {doubleCsrf}from'csrf-csrf';import Ya,{Store}from'express-session';import {readFileSync}from'fs';var Pn=Object.defineProperty;var pe=(s,e)=>{for(var r in e)Pn(s,r,{get:e[r],enumerable:true});};var ts={origin:function(s,e){!s||process.env.ORIGIN_URL.split(",").includes(s)?e(null,true):e(new Error("Not allowed by CORS"));},credentials:true,methods:["GET","POST","PUT","DELETE"],allowedHeaders:["Content-Type","Authorization","x-csrf-token","ngrok-skip-browser-warning"],maxAge:3600};function pt(s){s.use((e,r,t)=>{let{method:o,url:i}=e,c=Date.now();console.log(`${Ke.green("\u2713")} ${o} ${i}`),r.on("finish",()=>{let p=Date.now()-c,d=r.statusCode,T;d>=500?T=Ke.red(d.toString()):d>=400?T=Ke.yellow(d.toString()):d>=300?T=Ke.cyan(d.toString()):d>=200?T=Ke.green(d.toString()):T=Ke.red("500"),console.log(`${Ke.green("\u2713")} ${o} ${i} ${T} in ${p}ms`);}),t();});}var ss=[".vercel.app",".herokuapp.com",".netlify.app",".render.com",".onrender.com",".surge.sh",".firebaseapp.com",".web.app",".pages.dev",".workers.dev",".glitch.me",".now.sh",".github.io",".gitlab.io",".bitbucket.io",".stackblitz.io",".repl.co",".supabase.co",".railway.app",".ngrok-free.app"];var bn=18e6,En=()=>Date.now()/1e3|0,is="dir",ut="A256CBC-HS512";async function as(s){let{token:e,secret:r=process.env.SECRET,maxAge:t=bn,salt:o=process.env.SESSION_COOKIE_NAME}=s,i=Array.isArray(r)?r:[r],c=await cs(ut,i[0],o),p=await calculateJwkThumbprint({kty:"oct",k:base64url.encode(c)},`sha${c.byteLength<<3}`);return await new EncryptJWT(e).setProtectedHeader({alg:is,enc:ut,kid:p}).setIssuedAt().setExpirationTime(En()+t).setJti(crypto.randomUUID()).encrypt(c)}async function Lr(s){let{token:e,secret:r=process.env.SECRET,salt:t=process.env.SESSION_COOKIE_NAME}=s,o=Array.isArray(r)?r:[r];if(!e)return null;let{payload:i}=await jwtDecrypt(e,async({kid:c,enc:p})=>{for(let d of o){let T=await cs(p,d,t);if(c===void 0)return T;let y=await calculateJwkThumbprint({kty:"oct",k:base64url.encode(T)},`sha${T.byteLength<<3}`);if(c===y)return T}throw new Error("no matching decryption secret")},{clockTolerance:15,keyManagementAlgorithms:[is],contentEncryptionAlgorithms:[ut,"A256GCM"]});return i}async function cs(s,e,r){let t;switch(s){case "A256CBC-HS512":t=64;break;case "A256GCM":t=32;break;default:throw new Error("Unsupported JWT Content Encryption Algorithm")}return await hkdf("sha256",e,r,`Express.js Generated Encryption Key (${r})`,t)}var hr={enumValues:["INVESTOR","ADMIN"]},ue={PASSWORD_RESET:"PASSWORD_RESET",EMAIL_VERIFICATION:"EMAIL_VERIFICATION",LOGIN_OTP:"LOGIN_OTP",enumValues:["PASSWORD_RESET","EMAIL_VERIFICATION","LOGIN_OTP"]},tr={enumValues:["PAYPAL","PLAID"]},sr={enumValues:["PENDING","PROCESSING","COMPLETED","FAILED","REFUNDED","CANCELED"]},ps={enumValues:["PROPERTY","FUND"]},us={enumValues:["CREDIT","DEBIT"]},ds={enumValues:["IMAGE","VIDEO","AUDIO","DOCUMENT","OTHER"]},ls={enumValues:["PDF","DOC","DOCX","XLS","XLSX","PPT","PPTX","TXT","CSV"]},Mr={enumValues:["FIREBASE","CLOUDINARY","UPLOADTHING","S3","LOCAL"]};var It={};pe(It,{ROLE_TYPE:()=>xs,TOKEN_TYPE:()=>Us,accountRelations:()=>yi,accounts:()=>ve,onboardingData:()=>$e,onboardingDataRelations:()=>gi,profile:()=>Ue,profileRelations:()=>Ri,sessionRelations:()=>Si,sessions:()=>z,sessionsRelations:()=>Ti,users:()=>u,usersRelations:()=>fi,verificationToken:()=>M,verificationTokenRelations:()=>vi});var S={createdAt:timestamp("created_at",{withTimezone:true}).notNull().defaultNow(),updatedAt:timestamp("updated_at",{withTimezone:true}).notNull().defaultNow().$onUpdate(()=>new Date)};var bt={};pe(bt,{portfolioDividend:()=>Ee,portfolioDividendRelations:()=>ni,userDividend:()=>H,userDividendRelations:()=>ii});var At={};pe(At,{CATEGORY_TYPE:()=>ri,investments:()=>te,investmentsRelations:()=>si,portfolioGalleryImages:()=>G,portfolioGalleryImagesRelations:()=>oi,portfolios:()=>m,portfoliosRelations:()=>ti});var dt={};pe(dt,{MEDIA_TYPE:()=>ys,STORAGE_PROVIDER_TYPE:()=>Rs,mediaLibrary:()=>Q,mediaLibraryRelations:()=>Cn});var ys=pgEnum("media_type",ds.enumValues),Rs=pgEnum("storage_provider",Mr.enumValues),Q=pgTable("media_library",{id:serial("id").primaryKey(),fileName:text("file_name").notNull(),fileSize:integer("file_size").notNull(),mimeType:varchar("mime_type",{length:100}).notNull(),mediaType:ys("media_type").notNull(),provider:Rs("storage_provider").notNull(),storageId:text("storage_id").notNull(),url:text("url").notNull(),secureUrl:text("secure_url"),storageMetadata:json("storage_metadata"),width:integer("width"),height:integer("height"),duration:integer("duration"),isPublic:boolean("is_public").default(true),isFeatured:boolean("is_featured").default(false),...S}),Cn=relations(Q,({many:s})=>({portfoliosAsFeaturedImage:s(m,{relationName:"featuredImage"}),portfolioGalleryImages:s(G,{relationName:"galleryImages"})}));var Tt={};pe(Tt,{cart:()=>D,cartRelations:()=>$n,checkout:()=>V,checkoutRelations:()=>Vn});var lt={};pe(lt,{paypalTransactions:()=>W,paypalTransactionsRelations:()=>Ln});var W=pgTable("paypal_transactions",{id:serial("id").primaryKey(),transactionId:text("transaction_id").notNull().unique(),payerId:text("payer_id").notNull(),userId:integer("user_id").notNull().references(()=>u.id,{onDelete:"cascade"}),grossAmount:text("gross_amount").notNull(),paypalFee:text("paypal_fee").notNull(),netAmount:text("net_amount").notNull(),currency:text("currency").notNull(),portfolioId:integer("portfolio_id").references(()=>m.id,{onDelete:"set null"}),transactionDetails:json("transaction_details").default({}),...S}),Ln=relations(W,({one:s})=>({user:s(u,{fields:[W.userId],references:[u.id]}),portfolio:s(m,{fields:[W.portfolioId],references:[m.id]})}));var yt={};pe(yt,{plaidBanks:()=>g,plaidBanksRelations:()=>jn,plaidProfile:()=>be,plaidProfileRelations:()=>Kn,plaidTransactions:()=>L,plaidTransactionsRelations:()=>Fn});var L=pgTable("plaid_transactions",{id:serial().primaryKey(),transactionId:text("transaction_id"),userId:integer("user_id").notNull().references(()=>u.id,{onDelete:"cascade"}),achClass:varchar("ach_class",{length:3}),amount:decimal("amount",{precision:10,scale:2}),share:integer("share").default(0),authorizationDecision:varchar("authorization_decision",{length:10}),authorizationDecisionRationale:json("authorization_decision_rationale").default({}),description:varchar("description",{length:50}),failureReason:text("failure_reason"),fundingAccountId:text("funding_account_id"),guaranteeDecision:varchar("guarantee_decision",{length:10}),guaranteeDecisionRationale:text("guarantee_decision_rationale"),isoCurrencyCode:varchar("iso_currency_code",{length:3}),mode:varchar("mode",{length:20}),network:varchar("network",{length:20}),originationAccountId:text("origination_account_id"),status:varchar("status",{length:20}),transferId:text("transfer_id"),metadata:json("metadata").default({}),portfolioId:integer("portfolio_id").references(()=>m.id,{onDelete:"set null"}),transactionDetails:json("transaction_details").default({}),...S}),g=pgTable("plaid_banks",{id:serial("id").primaryKey(),accountId:text("account_id").notNull().unique(),userId:integer("user_id").notNull().references(()=>u.id,{onDelete:"cascade"}),bankName:text("bank_name").notNull(),bankType:text("bank_type").notNull(),accessToken:text("access_token").notNull(),bankData:json("bank_data").default({}),...S}),be=pgTable("plaid_profile",{id:serial("id").primaryKey(),userId:integer("user_id").notNull().unique().references(()=>u.id,{onDelete:"cascade"}),is_verified:boolean("is_verified").default(false),idv_status:text("idv_status").notNull(),most_recent_idv_session:text("most_recent_idv_session"),plaidProfileData:json("plaid_profile_data").default({}),...S}),Fn=relations(L,({one:s,many:e})=>({portfolio:s(m,{fields:[L.portfolioId],references:[m.id]}),user:s(u,{fields:[L.userId],references:[u.id]}),checkouts:e(V)})),jn=relations(g,({one:s,many:e})=>({user:s(u,{fields:[g.userId],references:[u.id]}),carts:e(D),checkouts:e(V)})),Kn=relations(be,({one:s})=>({user:s(u,{fields:[be.userId],references:[u.id]})}));var D=pgTable("cart",{id:serial("id").primaryKey(),userId:integer("user_id").notNull().unique().references(()=>u.id,{onDelete:"cascade"}),portfolioId:integer("portfolio_id").references(()=>m.id,{onDelete:"cascade"}).notNull(),shares:integer("shares").notNull(),bankAccountId:integer("bank_account_id").references(()=>g.id,{onDelete:"set null"}),bankAccountDetails:json("bank_account_details"),...S}),V=pgTable("checkout",{id:serial("id").primaryKey(),userId:integer("user_id").notNull().references(()=>u.id,{onDelete:"restrict"}),portfolioId:integer("portfolio_id").references(()=>m.id,{onDelete:"set null"}),portfolioDetails:json("portfolio_details"),shares:integer("shares").notNull(),bankAccountId:integer("bank_account_id").references(()=>g.id,{onDelete:"set null"}),bankAccountDetails:json("bank_account_details"),plaidTransactionId:integer("plaid_transaction_id").references(()=>L.id,{onDelete:"restrict"}),paypalTransactionId:integer("paypal_transaction_id").references(()=>W.id,{onDelete:"restrict"}),...S}),$n=relations(D,({one:s})=>({plaidBank:s(g,{fields:[D.bankAccountId],references:[g.id]}),portfolio:s(m,{fields:[D.portfolioId],references:[m.id]}),user:s(u,{fields:[D.userId],references:[u.id]})})),Vn=relations(V,({one:s})=>({plaidBank:s(g,{fields:[V.bankAccountId],references:[g.id]}),paypalTransaction:s(W,{fields:[V.paypalTransactionId],references:[W.id]}),plaidTransaction:s(L,{fields:[V.plaidTransactionId],references:[L.id]}),portfolio:s(m,{fields:[V.portfolioId],references:[m.id]}),user:s(u,{fields:[V.userId],references:[u.id]})}));var Pt={};pe(Pt,{paymentMethodTypeEnum:()=>ws,paymentStatusEnum:()=>_s,payments:()=>l,paymentsRelations:()=>Jn});var ws=pgEnum("payment_method_type",tr.enumValues),_s=pgEnum("payment_status",sr.enumValues),l=pgTable("payments",{id:serial("id").primaryKey(),userId:integer("user_id").notNull().references(()=>u.id,{onDelete:"cascade"}),transactionId:text("transaction_id"),type:ws("type").notNull(),portfolioId:integer("portfolio_id").references(()=>m.id,{onDelete:"set null"}),status:_s("status").notNull(),amount:doublePrecision("amount").notNull(),fee:doublePrecision("fee").default(0),netAmount:doublePrecision("net_amount"),currency:varchar("currency",{length:3}).default("USD"),description:text("description"),investedShares:integer("invested_shares").notNull().default(0),metadata:json("metadata").default({}),errorMessage:text("error_message"),...S}),Jn=relations(l,({one:s})=>({portfolio:s(m,{fields:[l.portfolioId],references:[m.id]}),user:s(u,{fields:[l.userId],references:[u.id]})}));var ri=pgEnum("category_type",ps.enumValues),m=pgTable("portfolios",{id:serial("id").primaryKey(),title:varchar("title",{length:255}).notNull(),slug:varchar("slug",{length:255}).notNull().unique(),description:text("description").notNull(),featuredImageId:integer("featured_image_id").references(()=>Q.id),price:doublePrecision("price").notNull(),shares:integer("shares").notNull(),sharePrice:doublePrecision("share_price").notNull(),remainingShares:integer("remaining_shares").notNull(),remainingInvestment:doublePrecision("remaining_investment").notNull(),authorId:integer("author_id").references(()=>u.id),...S}),G=pgTable("portfolio_gallery_images",{portfolioId:integer("portfolio_id").notNull().references(()=>m.id,{onDelete:"cascade"}),mediaId:integer("media_id").notNull().references(()=>Q.id,{onDelete:"cascade"}),displayOrder:integer("display_order").notNull().default(0),...S},s=>({pk:primaryKey({columns:[s.portfolioId,s.mediaId]})})),te=pgTable("investments",{id:serial("id").primaryKey(),investorId:integer("investor_id").notNull().references(()=>u.id),portfolioId:integer("portfolio_id").references(()=>m.id,{onDelete:"cascade"}).notNull(),shares:integer("shares").notNull(),sharePrice:doublePrecision("share_price").notNull(),totalInvestment:doublePrecision("total_investment").notNull(),...S}),ti=relations(m,({one:s,many:e})=>({featuredImage:s(Q,{fields:[m.featuredImageId],references:[Q.id],relationName:"featuredImage"}),author:s(u,{fields:[m.authorId],references:[u.id]}),payments:e(l),investments:e(te),portfolioDividends:e(Ee),paypalTransactions:e(W),plaidTransactions:e(L),carts:e(D),checkouts:e(V),userDividends:e(H),galleryImages:e(G,{relationName:"portfolioGalleryImages"})})),si=relations(te,({one:s})=>({user:s(u,{fields:[te.investorId],references:[u.id]}),portfolio:s(m,{fields:[te.portfolioId],references:[m.id]})})),oi=relations(G,({one:s})=>({portfolio:s(m,{fields:[G.portfolioId],references:[m.id],relationName:"portfolioGalleryImages"}),media:s(Q,{fields:[G.mediaId],references:[Q.id],relationName:"galleryImages"})}));var Ee=pgTable("portfolio_dividend",{id:serial("id").primaryKey(),portfolioId:integer("portfolio_id").references(()=>m.id,{onDelete:"restrict"}).notNull(),netRentalIncome:doublePrecision("net_rental_income").notNull(),expenses:doublePrecision("expenses").notNull(),totalRevenue:doublePrecision("total_revenue").notNull(),...S}),H=pgTable("user_dividend",{id:serial("id").primaryKey(),userId:integer("user_id").references(()=>u.id,{onDelete:"restrict"}).notNull(),portfolioId:integer("portfolio_id").references(()=>m.id,{onDelete:"restrict"}).notNull(),totalShares:integer("total_shares").notNull(),dividend:doublePrecision("dividend").notNull(),...S}),ni=relations(Ee,({one:s})=>({portfolio:s(m,{fields:[Ee.portfolioId],references:[m.id]})})),ii=relations(H,({one:s})=>({user:s(u,{fields:[H.userId],references:[u.id]}),portfolio:s(m,{fields:[H.portfolioId],references:[m.id]})}));var Et={};pe(Et,{BALANCE_ENUM:()=>Os,wallet:()=>w,walletRelations:()=>li});var Os=pgEnum("balance_type",us.enumValues),w=pgTable("wallet",{id:serial("id").primaryKey(),userId:integer("user_id").references(()=>u.id,{onDelete:"restrict"}).notNull(),amount:doublePrecision("amount").notNull(),remainingAmount:doublePrecision("remaining_amount").notNull(),balanceType:Os("balance_type"),...S}),li=relations(w,({one:s})=>({user:s(u,{fields:[w.userId],references:[u.id]})}));var xs=pgEnum("role_type",hr.enumValues),Us=pgEnum("token_type",ue.enumValues),u=pgTable("user",{id:serial("id").primaryKey(),name:text("name"),username:text("username").unique(),email:text("email").unique(),password:text("password"),emailVerified:timestamp("email_verified",{withTimezone:true}),image:text("image"),role:xs("role").notNull().default("INVESTOR"),...S}),ve=pgTable("account",{id:serial("id").primaryKey(),userId:integer("user_id").notNull().references(()=>u.id,{onDelete:"cascade"}),type:text("type").notNull(),provider:text("provider").notNull(),providerAccountId:text("provider_account_id").notNull(),refreshToken:text("refresh_token"),accessToken:text("access_token"),expiresAt:integer("expires_at"),tokenType:text("token_type"),scope:text("scope"),idToken:text("id_token"),sessionState:text("session_state"),...S}),Ue=pgTable("profile",{id:serial("id").primaryKey(),userId:integer("user_id").notNull().references(()=>u.id,{onDelete:"cascade"}).unique(),firstName:text("first_name"),lastName:text("last_name"),address:text("address"),city:text("city"),state:text("state"),country:text("country"),zipCode:text("zip_code"),dateOfBirth:timestamp("date_of_birth",{withTimezone:true}),phoneNumber:text("phone_number"),...S}),z=pgTable("session",{id:serial("id").primaryKey(),sessionId:text("session_id").notNull().unique(),sessionCookie:text("session_cookie").unique(),userId:integer("user_id").references(()=>u.id,{onDelete:"cascade"}),expires:timestamp("expires",{withTimezone:true}).notNull(),...S}),M=pgTable("verification_token",{id:serial("id").primaryKey(),identifier:text("identifier").notNull(),token:text("token").notNull(),tokenType:Us("token_type").notNull(),expires:timestamp("expires",{withTimezone:true}).notNull(),...S},s=>({identifierTypeIdx:uniqueIndex("identifier_type_idx").on(s.identifier,s.tokenType)})),$e=pgTable("onboarding_data",{id:serial("id").primaryKey(),userId:integer("user_id").notNull().unique().references(()=>u.id,{onDelete:"cascade"}),complete:boolean("complete").notNull(),accreditationStatus:boolean("accreditation_status").notNull(),onboardingJsonData:json("onboarding_json_data").default({}),currentStep:integer("current_step").default(1),...S}),fi=relations(u,({many:s})=>({payments:s(l),investments:s(te),onboardingData:s($e),portfolios:s(m),plaidProfiles:s(be),paypalTransactions:s(W),sessions:s(z),plaidBanks:s(g),plaidTransactions:s(L),profiles:s(Ue),carts:s(D),checkouts:s(V),accounts:s(ve),userDividends:s(H),wallets:s(w)})),yi=relations(ve,({one:s})=>({user:s(u,{fields:[ve.userId],references:[u.id]})})),Ri=relations(Ue,({one:s})=>({user:s(u,{fields:[Ue.userId],references:[u.id]})})),Ti=relations(z,({one:s})=>({user:s(u,{fields:[z.userId],references:[u.id]})})),vi=relations(M,({one:s})=>({user:s(u,{fields:[M.identifier],references:[u.email]})})),gi=relations($e,({one:s})=>({user:s(u,{fields:[$e.userId],references:[u.id]})})),Si=relations(z,({one:s})=>({user:s(u,{fields:[z.userId],references:[u.id]})}));var Nt={};pe(Nt,{DATA_ROOM_TYPE:()=>Ms,STORAGE_PROVIDER_TYPE:()=>Bs,dataRoom:()=>Ie});var Ms=pgEnum("data_room_type",ls.enumValues),Bs=pgEnum("storage_provider",Mr.enumValues),Ie=pgTable("data_room",{id:serial("id").primaryKey(),fileName:text("file_name").notNull(),fileSize:integer("file_size").notNull(),mimeType:varchar("mime_type",{length:100}).notNull(),documentType:Ms("document_type").notNull(),provider:Bs("storage_provider").notNull(),storageId:text("storage_id").notNull(),url:text("url").notNull(),secureUrl:text("secure_url"),storageMetadata:json("storage_metadata"),pageCount:integer("page_count"),wordCount:integer("word_count"),duration:integer("duration"),isPublic:boolean("is_public").default(true),isFeatured:boolean("is_featured").default(false),isArchived:boolean("is_archived").default(false),description:text("description"),tags:json("tags"),version:varchar("version",{length:50}).default("1.0"),...S});var kt={};pe(kt,{contact:()=>B,newsletter:()=>J});var B=pgTable("contact",{id:serial("id").primaryKey(),name:varchar("name",{length:256}).notNull(),email:varchar("email",{length:256}).notNull(),message:text("message").notNull(),...S}),J=pgTable("newsletter",{id:serial("id").primaryKey(),email:varchar("email",{length:256}).notNull(),...S});var Ai={...It,...Nt,...bt,...kt,...dt,...Tt,...Pt,...lt,...yt,...At,...Et},Ks=Ai;bi.config();var Ei=Vs(process.env.DATABASE_URL),Ii=drizzle(Ei,{schema:Ks}),Di=Vs(process.env.DATABASE_URL,{max:1});drizzle(Di);var Qe=Ii;var _=class{db;constructor(){this.db=Qe;}};var k=class{static detectInputType(e){return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e)?"EMAIL":"USERNAME"}static OTPGenerator(e=4){if(e<4)throw new Error("The OTP length must be at least 4.");let r=Math.pow(10,e-1),t=Math.pow(10,e)-1;return Math.floor(Math.random()*(t-r+1)+r)}static OTPExpiry(e=5){let r=new Date;return new Date(r.getTime()+e*6e4)}static sameSiteCookieConfig(){try{let e=c=>/^(\d{1,3}\.){3}\d{1,3}$/.test(c),r=c=>ss.some(p=>c.endsWith(p.replace(".",""))),t=()=>{if(process.env.API_URL)try{return new URL(process.env.API_URL).hostname}catch{return process.env.API_URL}return "localhost"},o=process.env.COOKIE_DOMAIN;if(!o)return {sameSite:"lax",secure:!1,domain:t()};let i=o.startsWith(".")?o.substring(1):o;return i==="localhost"||i==="127.0.0.1"||e(i)||o==="localhost"?{sameSite:"lax",secure:!1,domain:t()}:r(i)?{sameSite:"none",secure:!0}:{sameSite:"lax",secure:!0,domain:o}}catch{return {sameSite:"lax",secure:false}}}};var a={HTTP_100_CONTINUE:100,HTTP_101_SWITCHING_PROTOCOLS:101,HTTP_102_PROCESSING:102,HTTP_103_EARLY_HINTS:103,HTTP_200_OK:200,HTTP_201_CREATED:201,HTTP_202_ACCEPTED:202,HTTP_203_NON_AUTHORITATIVE_INFORMATION:203,HTTP_204_NO_DATA:204,HTTP_205_RESET_DATA:205,HTTP_206_PARTIAL_DATA:206,HTTP_207_MULTI_STATUS:207,HTTP_208_ALREADY_REPORTED:208,HTTP_226_IM_USED:226,HTTP_300_MULTIPLE_CHOICES:300,HTTP_301_MOVED_PERMANENTLY:301,HTTP_302_FOUND:302,HTTP_303_SEE_OTHER:303,HTTP_304_NOT_MODIFIED:304,HTTP_305_USE_PROXY:305,HTTP_306_SWITCH_PROXY:306,HTTP_307_TEMPORARY_REDIRECT:307,HTTP_308_PERMANENT_REDIRECT:308,HTTP_400_BAD_REQUEST:400,HTTP_401_UNAUTHORIZED:401,HTTP_402_PAYMENT_REQUIRED:402,HTTP_403_FORBIDDEN:403,HTTP_404_NOT_FOUND:404,HTTP_405_METHOD_NOT_ALLOWED:405,HTTP_406_NOT_ACCEPTABLE:406,HTTP_407_PROXY_AUTHENTICATION_REQUIRED:407,HTTP_408_REQUEST_TIMEOUT:408,HTTP_409_CONFLICT:409,HTTP_410_GONE:410,HTTP_411_LENGTH_REQUIRED:411,HTTP_412_PRECONDITION_FAILED:412,HTTP_413_PAYLOAD_TOO_LARGE:413,HTTP_414_URI_TOO_LONG:414,HTTP_415_UNSUPPORTED_MEDIA_TYPE:415,HTTP_416_RANGE_NOT_SATISFIABLE:416,HTTP_417_EXPECTATION_FAILED:417,HTTP_418_IM_A_TEAPOT:418,HTTP_421_MISDIRECTED_REQUEST:421,HTTP_422_UNPROCESSABLE_ENTITY:422,HTTP_423_LOCKED:423,HTTP_424_FAILED_DEPENDENCY:424,HTTP_425_TOO_EARLY:425,HTTP_426_UPGRADE_REQUIRED:426,HTTP_428_PRECONDITION_REQUIRED:428,HTTP_429_TOO_MANY_REQUESTS:429,HTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE:431,HTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS:451,HTTP_500_INTERNAL_SERVER_ERROR:500,HTTP_501_NOT_IMPLEMENTED:501,HTTP_502_BAD_GATEWAY:502,HTTP_503_SERVICE_UNAVAILABLE:503,HTTP_504_GATEWAY_TIMEOUT:504,HTTP_505_HTTP_VERSION_NOT_SUPPORTED:505,HTTP_506_VARIANT_ALSO_NEGOTIATES:506,HTTP_507_INSUFFICIENT_STORAGE:507,HTTP_508_LOOP_DETECTED:508,HTTP_510_NOT_EXTENDED:510,HTTP_511_NETWORK_AUTHENTICATION_REQUIRED:511};var Ni=s=>s!==null&&typeof s=="object"&&"status"in s&&typeof s.status=="number"&&"message"in s&&typeof s.message=="string",Qs=new Set([a.HTTP_204_NO_DATA]),n=class{static async createResponse(e,r,t,o){return Qs.has(e)?Promise.resolve({status:e,message:r,data:void 0}):Promise.resolve({status:e,message:r,data:t,pagination:o})}static async createRejectResponse(e,r){return Promise.reject({status:e,message:r})}static createErrorResponse(e){return console.error("Error:",e instanceof Error?e.message:e),Ni(e)?Promise.reject(e):Promise.reject({status:a.HTTP_500_INTERNAL_SERVER_ERROR,message:"Internal Server Error"})}},se=class{response;constructor(e){this.response=e;}successResponse(e,r,t){return this.sendResponse({status:a.HTTP_200_OK,message:e,data:r,pagination:t})}unauthorizedResponse(e){return this.sendResponse({status:a.HTTP_401_UNAUTHORIZED,message:e})}forbiddenResponse(e){return this.sendResponse({status:a.HTTP_403_FORBIDDEN,message:e})}badResponse(e){return this.sendResponse({status:a.HTTP_400_BAD_REQUEST,message:e})}internalServerError(e="Internal Server Error"){return this.sendResponse({status:a.HTTP_500_INTERNAL_SERVER_ERROR,message:e})}sendResponse({status:e,message:r,data:t,pagination:o}){if(Qs.has(e))return this.response.status(e).json({});let i={status:e,message:r};return t!==void 0&&(i.data=t),o&&(i.pagination=o),this.response.status(e).json(i)}};var We=class extends _{async limitOTPRequest(e,r,t=5){try{let o=await this.db.query.verificationToken.findFirst({where:and(eq(M.identifier,e.email),eq(M.tokenType,r))}),i=new Date().getTime(),c=new Date(o?.updatedAt).getTime(),p=i-c,d=Math.floor(p/6e4);if(console.log("Time difference in minutes: ",d),o&&d<t){let T=`You can only request OTP per ${t} minute(s). Please wait for ${t-d} minute(s)`;return n.createRejectResponse(a.HTTP_429_TOO_MANY_REQUESTS,T)}return Promise.resolve(!0)}catch(o){return n.createErrorResponse(o)}}async saveOTPToDatabase(e,r,t=k.OTPExpiry()){try{if(!e.email)return n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Email is not registered");let o=k.OTPGenerator();return await this.db.insert(M).values({identifier:e.email,token:String(o),tokenType:r,expires:t}).onConflictDoUpdate({target:[M.identifier,M.tokenType],set:{token:String(o),expires:t}}),Promise.resolve(o)}catch(o){return n.createErrorResponse(o)}}async checkOTPInDatabase(e,r,t){try{let o=await this.db.query.verificationToken.findFirst({where:and(eq(M.identifier,e.email),eq(M.token,r),eq(M.tokenType,t))});return o?o?.expires&&o.expires<new Date?(await this.deleteOTPFromDatabase(e,t),n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"OTP expired")):Promise.resolve(o.token):n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Invalid OTP")}catch(o){return n.createErrorResponse(o)}}async verifyOTPFromDatabase(e,r,t){try{let o=await this.db.query.verificationToken.findFirst({where:and(eq(M.identifier,e.email),eq(M.token,r),eq(M.tokenType,t))});return o?o?.expires&&o.expires<new Date?(await this.deleteOTPFromDatabase(e,t),n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"OTP expired")):(await this.deleteOTPFromDatabase(e,t),Promise.resolve(!0)):n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Invalid OTP")}catch(o){return n.createErrorResponse(o)}}async deleteOTPFromDatabase(e,r){try{return await this.db.delete(M).where(and(eq(M.identifier,e.email),eq(M.tokenType,r))),Promise.resolve(!0)}catch(t){return n.createErrorResponse(t)}}};var C=class extends _{otpService;constructor(){super(),this.otpService=new We;}async createUser(e){try{e.username&&await this.duplicateUserCheckByUsername(e.username),e.email&&await this.duplicateUserCheckByEmail(e.email);let r=await this.db.insert(u).values(e).returning(),{password:t,...o}=r[0];return n.createResponse(a.HTTP_201_CREATED,"User created successfully",o)}catch(r){return n.createErrorResponse(r)}}async createGoogleAccount(e,r,t){try{let o=await this.db.insert(ve).values({userId:e,type:"oauth",provider:"google",providerAccountId:r.id,accessToken:t,refreshToken:null,expiresAt:18e6,tokenType:"access_token",scope:"profile",idToken:r.id,sessionState:null}).returning();return n.createResponse(a.HTTP_201_CREATED,"Google account created successfully",o[0])}catch(o){return n.createErrorResponse(o)}}async createUserFromGoogle(e,r){try{let t=await this.db.query.users.findFirst({where:eq(u.email,e._json.email),with:{accounts:{where:and(eq(ve.providerAccountId,e.id),eq(ve.provider,"google"))}}});if(t)if(t.accounts.length>0){await this.db.update(ve).set({accessToken:r}).where(eq(ve.providerAccountId,e.id)),t.emailVerified||await this.accountVerification(t.id);let{accounts:i,...c}=t;return n.createResponse(a.HTTP_200_OK,"Google account updated successfully",c)}else {await this.createGoogleAccount(t.id,e,r);let{accounts:i,...c}=t;return n.createResponse(a.HTTP_201_CREATED,"Google account created successfully",c)}let o=await this.createUser({name:e._json.name,email:e._json.email,username:e._json.email.split("@")[0],password:null,emailVerified:new Date,image:e._json.picture});return await this.createGoogleAccount(o.data?.id,e,r),n.createResponse(a.HTTP_201_CREATED,"User created successfully",o.data)}catch(t){return n.createErrorResponse(t)}}async findUserByUsernameOrEmail(e){try{let r=k.detectInputType(e),t={};return r==="EMAIL"?(t=(await this.findUserByEmail(e,!0)).data,n.createResponse(a.HTTP_200_OK,"User found successfully",t)):r==="USERNAME"?(t=(await this.findUserByUsername(e,!0)).data,n.createResponse(a.HTTP_200_OK,"User found successfully",t)):n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Invalid input type")}catch(r){return n.createErrorResponse(r)}}async findUserById(e,r=false){try{let t=await this.db.query.users.findFirst({where:eq(u.id,e)});if(!t)return n.createRejectResponse(a.HTTP_404_NOT_FOUND,"User not found");if(r)return n.createResponse(a.HTTP_200_OK,"User found successfully",t);let{password:o,...i}=t;return n.createResponse(a.HTTP_200_OK,"User found successfully",i)}catch(t){return n.createErrorResponse(t)}}async findUserByEmail(e,r=false){try{let t=await this.db.query.users.findFirst({where:eq(u.email,e)});if(!t)return n.createRejectResponse(a.HTTP_404_NOT_FOUND,"User not found");if(r)return n.createResponse(a.HTTP_200_OK,"User found successfully",t);let{password:o,...i}=t;return n.createResponse(a.HTTP_200_OK,"User found successfully",i)}catch(t){return n.createErrorResponse(t)}}async findUserByUsername(e,r=false){try{let t=await this.db.query.users.findFirst({where:eq(u.username,e)});if(!t)return n.createRejectResponse(a.HTTP_404_NOT_FOUND,"User not found");if(r)return n.createResponse(a.HTTP_200_OK,"User found successfully",t);let{password:o,...i}=t;return n.createResponse(a.HTTP_200_OK,"User found successfully",i)}catch(t){return n.createErrorResponse(t)}}async duplicateUserCheckByEmail(e){try{return await this.db.query.users.findFirst({where:eq(u.email,e)})?n.createRejectResponse(a.HTTP_409_CONFLICT,"User already exists"):n.createResponse(a.HTTP_200_OK,"User does not exist",!1)}catch(r){return n.createErrorResponse(r)}}async duplicateUserCheckByUsername(e){try{return await this.db.query.users.findFirst({where:eq(u.username,e)})?n.createRejectResponse(a.HTTP_409_CONFLICT,"User already exists"):n.createResponse(a.HTTP_200_OK,"User does not exist",!1)}catch(r){return n.createErrorResponse(r)}}async passwordChecker(e,r){try{if(!r)return n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"User account has no password");let t=await Ws.compare(e,r);return t?n.createResponse(a.HTTP_200_OK,"Password checked",t):n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Password incorrect")}catch(t){return n.createErrorResponse(t)}}async accountVerification(e){try{return await this.db.update(u).set({emailVerified:new Date}).where(eq(u.id,e)),n.createResponse(a.HTTP_200_OK,"User verified",!0)}catch(r){return n.createErrorResponse(r)}}async checkAccountVerification(e){try{return (await this.findUserById(e)).data?.emailVerified?n.createResponse(a.HTTP_200_OK,"User is verified",!0):n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"User is not verified")}catch(r){return n.createErrorResponse(r)}}async checkUserExistence(e){try{return await this.db.query.users.findFirst({where:eq(u.id,e)})?n.createResponse(a.HTTP_200_OK,"User exists",!0):n.createResponse(a.HTTP_200_OK,"User does not exist",!1)}catch(r){return n.createErrorResponse(r)}}async changePassword(e,r){try{let t=await Ws.hash(r,10);return await this.db.update(u).set({password:t}).where(eq(u.id,e)),n.createResponse(a.HTTP_200_OK,"Password changed successfully",!0)}catch(t){return n.createErrorResponse(t)}}async retrieveUserProfile(e){try{let r=await this.db.query.profile.findFirst({where:eq(Ue.userId,e)});return r?n.createResponse(a.HTTP_200_OK,"User profile retrieved successfully",r):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"User profile not found")}catch(r){return n.createErrorResponse(r)}}async updateUserProfile(e,r){try{let t=`${r.firstName} ${r.lastName}`;return await this.db.update(u).set({name:t}).where(eq(u.id,e)),await this.db.insert(Ue).values({...r,userId:e}).onConflictDoUpdate({target:Ue.userId,set:r}),n.createResponse(a.HTTP_200_OK,"User updated successfully",!0)}catch(t){return n.createErrorResponse(t)}}async uploadAvatar(e,r){try{return await this.db.update(u).set({image:r}).where(eq(u.id,e)),n.createResponse(a.HTTP_200_OK,"Avatar uploaded successfully",!0)}catch(t){return n.createErrorResponse(t)}}};var zs=new C,Ci=process.env.SESSION_COOKIE_NAME;Ct.serializeUser(async(s,e)=>{try{e(null,s.id);}catch(r){e(r,false);}});Ct.deserializeUser(async(s,e)=>{try{let r=await zs.findUserById(s);e(null,r.data);}catch(r){e(r,false);}});Ct.use("jwtAuthentication",new Strategy(async(s,e)=>{try{let r=s.cookies[Ci];if(!r)return e({status:a.HTTP_403_FORBIDDEN,message:"Token not found"},!1);let t=await Lr({token:r});if(!t)return e({status:a.HTTP_403_FORBIDDEN,message:"Token not found"},!1);let o=await zs.findUserByUsername(String(t.username));e(null,o.data);}catch(r){e(r,false);}}));var Ys=new C;Ct.serializeUser(async(s,e)=>{try{e(null,s.id);}catch(r){e(r,false);}});Ct.deserializeUser(async(s,e)=>{try{let r=await Ys.findUserById(s);e(null,r.data);}catch(r){e(r,false);}});Ct.use(new Strategy$1({clientID:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,callbackURL:process.env.GOOGLE_CALLBACK_URL},async(s,e,r,t)=>{try{let o=await Ys.createUserFromGoogle(r,s);t(null,o.data);}catch(o){console.error("Google strategy error:",o),t(o,false);}}));function Ut(s){s.get("/",(e,r)=>{r.status(200).send(`
				<!DOCTYPE html>
				<html lang="en">
				<head>
						<meta charset="UTF-8">
						<meta name="viewport" content="width=device-width, initial-scale=1.0">
						<title>Welcome Page</title>
						<style>
								body {
										font-family: Arial, sans-serif;
										background-color: #f4f4f9;
										color: #333;
										margin: 0;
										padding: 0;
										display: flex;
										justify-content: center;
										align-items: center;
										height: 100vh;
								}
								.container {
										text-align: center;
										background: white;
										padding: 20px;
										border-radius: 10px;
										box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
								}
								h1 {
										color: #4CAF50;
								}
								p {
										font-size: 1.2em;
								}
						</style>
				</head>
				<body>
						<div class="container">
								<h1>Welcome to the Application</h1>
								<p>All the API routes start with <code>/api</code></p>
								<p>For example: <code>/api/auth/login</code></p>
						</div>
				</body>
				</html>
    `);});}var q={success:{create:s=>`${s} created successfully.`,read:s=>`${s} retrieved successfully.`,update:s=>`${s} updated successfully.`,delete:s=>`${s} deleted successfully.`},error:{create:{validationError:s=>`Creation of ${s} failed. Validation error occurred.`,alreadyExists:s=>`Creation of ${s} failed. ${s} already exists.`,missingFields:s=>`Creation of ${s} failed. Missing required fields.`,serverError:s=>`Creation of ${s} failed. Server error occurred.`,duplicateEntry:s=>`Creation of ${s} failed. Duplicate entry detected.`,invalidData:s=>`Creation of ${s} failed. Invalid data provided.`,quotaExceeded:s=>`Creation of ${s} failed. Quota exceeded.`},read:{notFound:s=>`Retrieval of ${s} failed. ${s} not found.`,unauthorized:s=>`Retrieval of ${s} failed. You do not have the necessary permissions.`,serverError:s=>`Retrieval of ${s} failed. Server error occurred.`,noData:s=>`Retrieval of ${s} failed. No data available.`,forbidden:s=>`Retrieval of ${s} failed. Forbidden access.`,timeout:s=>`Retrieval of ${s} failed. Operation timed out.`},update:{notFound:s=>`Update of ${s} failed. ${s} not found.`,validationError:s=>`Update of ${s} failed. Validation error occurred.`,missingFields:s=>`Update of ${s} failed. Missing required fields.`,serverError:s=>`Update of ${s} failed. Server error occurred.`,conflict:s=>`Update of ${s} failed. Conflict with existing data.`,unauthorized:s=>`Update of ${s} failed. Unauthorized access.`,noChanges:s=>`Update of ${s} failed. No changes detected.`,locked:s=>`Update of ${s} failed. The item is locked.`},delete:{notFound:s=>`Deletion of ${s} failed. ${s} not found.`,unauthorized:s=>`Deletion of ${s} failed. You do not have the necessary permissions.`,serverError:s=>`Deletion of ${s} failed. Server error occurred.`,conflict:s=>`Deletion of ${s} failed. Conflict with related data.`,protected:s=>`Deletion of ${s} failed. ${s} is protected.`,dependencyError:s=>`Deletion of ${s} failed. Dependency error occurred.`,timeout:s=>`Deletion of ${s} failed. Operation timed out.`}}},R={error:{required:{fieldIsRequired:s=>`${s} is required.`},limit:{stringMin:(s,e)=>`${s} must be at least ${e} characters.`,stringMax:(s,e)=>`${s} must not exceed ${e} characters.`,arrayMin:(s,e)=>`${s} must have at least ${e} items.`,arrayMax:(s,e)=>`${s} must not exceed ${e} items.`,numberMin:(s,e)=>`${s} must be at least ${e}.`,numberMax:(s,e)=>`${s} must not exceed ${e}.`},invalid:{invalidString:s=>`${s} must be a string.`,invalidEmail:s=>`${s} must be a valid email address.`,invalidNumber:s=>`${s} must be a number.`,invalidBoolean:s=>`${s} must be a boolean.`,invalidDate:s=>`${s} must be a date.`,invalidArray:s=>`${s} must be an array.`,invalidObject:s=>`${s} must be an object.`,invalidEnum:(s,e)=>`${s} must be one of the following values: ${e.join(", ")}.`,invalidUnion:s=>`${s} must be one of the specified types.`,invalidIntersection:s=>`${s} must be a combination of the specified types.`,invalidTuple:s=>`${s} must be a tuple.`,invalidRecord:s=>`${s} must be a record.`,invalidLiteral:(s,e)=>`${s} must be the literal value: ${e}.`,invalidNull:s=>`${s} must be null.`,invalidUndefined:s=>`${s} must be undefined.`,invalidOptional:s=>`${s} must be optional.`,invalidNullable:s=>`${s} must be nullable.`,invalidPromise:s=>`${s} must be a promise.`,invalidFunction:s=>`${s} must be a function.`,invalidClass:s=>`${s} must be a class.`,invalidUnknown:s=>`${s} must be unknown.`,invalidNever:s=>`${s} must be never.`,invalidVoid:s=>`${s} must be void.`,invalidAny:s=>`${s} must be any.`,invalidUnknownKeys:s=>`${s} must have unknown keys.`,invalidFile:s=>`${s} must be a file.`,invalidFileSize:(s,e)=>`${s} must not exceed ${e} bytes.`,invalidFileType:(s,e)=>`${s} must be of type ${e}.`,invalidUpperCase:s=>`${s} must be at least one upper case.`,invalidLowerCase:s=>`${s} must be at least one lower case.`,invalidNumericCase:s=>`${s} must be at least one number.`,invalidUsername:s=>`${s} must contain only letters, numbers, and underscores.`,invalidUsernameOrEmail:s=>`${s} must be a valid username or email address.`,invalidPhoneNumber:s=>`${s} must be a valid phone number.`}}};var Ui=/^\+?[1-9]\d{1,14}$/;var h=s=>z$1.string({required_error:R.error.required.fieldIsRequired(s),invalid_type_error:R.error.invalid.invalidString(s)}).min(1,R.error.required.fieldIsRequired(s)),He=(s,e)=>z$1.enum(e,{required_error:R.error.required.fieldIsRequired(s),invalid_type_error:R.error.invalid.invalidEnum(s,e)});var b=s=>z$1.number({required_error:R.error.required.fieldIsRequired(s),invalid_type_error:R.error.invalid.invalidNumber(s)}).min(1,R.error.required.fieldIsRequired(s)).int().positive();var Wr=z$1.string({required_error:R.error.required.fieldIsRequired("Username")}).min(1,R.error.required.fieldIsRequired("Username")).max(20,R.error.limit.stringMax("Username",20)).regex(new RegExp("^[a-zA-Z0-9_]*$"),R.error.invalid.invalidUsername("Username")),De=z$1.string({required_error:R.error.required.fieldIsRequired("Email")}).min(1,R.error.required.fieldIsRequired("Email")).email(R.error.invalid.invalidEmail("Email")),vr=z$1.string({required_error:R.error.required.fieldIsRequired("Username or email"),invalid_type_error:R.error.invalid.invalidString("Username or email")}).min(1,R.error.required.fieldIsRequired("Username or email")).max(255,R.error.limit.numberMax("Username or email",255)).refine(s=>{let e=/^[^\s@]+@[^\s@]+\.[^\s@]+$/,r=/^[a-zA-Z0-9_]*$/;return s.includes("@")?e.test(s):r.test(s)&&s.length>=1&&s.length<=20},R.error.invalid.invalidUsernameOrEmail("Username or email")),qe=z$1.string({required_error:R.error.required.fieldIsRequired("Password")}).min(1,R.error.required.fieldIsRequired("Password")).min(6,R.error.limit.stringMin("Password",6)).regex(new RegExp(".*[A-Z].*"),R.error.invalid.invalidUpperCase("Password")).regex(new RegExp(".*[a-z].*"),R.error.invalid.invalidLowerCase("Password")).regex(new RegExp(".*\\d.*"),R.error.invalid.invalidNumericCase("Password")),Gs=z$1.string({required_error:R.error.required.fieldIsRequired("New Password")}).min(1,R.error.required.fieldIsRequired("New Password")).min(6,R.error.limit.stringMin("New Password",6)).regex(new RegExp(".*[A-Z].*"),R.error.invalid.invalidUpperCase("New Password")).regex(new RegExp(".*[a-z].*"),R.error.invalid.invalidLowerCase("New Password")).regex(new RegExp(".*\\d.*"),R.error.invalid.invalidNumericCase("New Password"));z$1.string({required_error:R.error.required.fieldIsRequired("Confirm Password")}).min(1,R.error.required.fieldIsRequired("Confirm Password")).min(6,R.error.limit.stringMin("Confirm Password",6)).regex(new RegExp(".*[A-Z].*"),R.error.invalid.invalidUpperCase("Confirm Password")).regex(new RegExp(".*[a-z].*"),R.error.invalid.invalidLowerCase("Confirm Password")).regex(new RegExp(".*\\d.*"),R.error.invalid.invalidNumericCase("Confirm Password"));var Js=s=>h(s).refine(e=>{let r=new Date(e);return !isNaN(r.getTime())},R.error.invalid.invalidDate(s)).transform(e=>new Date(e)),Xs=s=>z$1.string({required_error:R.error.required.fieldIsRequired(s),invalid_type_error:R.error.invalid.invalidString(s)}).min(1,R.error.required.fieldIsRequired(s)).refine(e=>Ui.test(e),R.error.invalid.invalidPhoneNumber(s)).transform(e=>String(e).trim()),Zs=s=>z$1.boolean({required_error:R.error.required.fieldIsRequired(s),invalid_type_error:R.error.invalid.invalidBoolean(s)});var Ht=z$1.object({username:vr,password:qe,otp:z$1.boolean({invalid_type_error:R.error.invalid.invalidBoolean("OTP")}).optional()}),eo=z$1.object({username:vr,password:qe,otp:b("OTP")}),ro=z$1.object({name:h("Name"),username:Wr,email:De,password:qe}),to=z$1.object({username:vr,otp:b("OTP")}),so=z$1.object({username:vr}),oo=z$1.object({email:De,otp:b("OTP")}),no=z$1.object({email:De,otp:b("OTP"),password:qe}),io=z$1.object({oldPassword:qe,newPassword:Gs}),ao=z$1.object({firstName:h("First Name").optional(),lastName:h("Last Name").optional(),address:h("Address").optional(),city:h("City").optional(),state:h("State").optional(),country:h("Country").optional(),zipCode:h("Zip Code").optional(),dateOfBirth:Js("Date of Birth").optional(),phoneNumber:Xs("Phone Number").optional()});var P=class{model;sortableFields;constructor(e){this.model=e,this.sortableFields=this.getDynamicSortFields();}getDynamicSortFields(){let e={};for(let[r,t]of Object.entries(this.model))typeof t=="object"&&"name"in t&&(e[r]=t);return e}getValidSortFields(){return Object.keys(this.sortableFields)}applySorting(e,r){if(!e)return desc(this.model.id);let t=this.sortableFields[e];return t?(r?.toLowerCase()==="asc"?asc:desc)(t):desc(this.model.id)}isValidSortMethod(e){return e in this.sortableFields}isValidSortDirection(e){return ["asc","desc"].includes(e.toLowerCase())}};var qi=s=>({sortMethodSchema:t=>z$1.string().optional().transform(o=>o&&s.isValidSortMethod(o)?String(o):t?"id":void 0).pipe(z$1.string().optional()),sortBySchema:t=>z$1.string().optional().transform(o=>o&&s.isValidSortDirection(o)?String(o).toLowerCase():t?"desc":void 0).pipe(z$1.string().optional())}),Li=s=>z$1.string().optional().transform(e=>e?isNaN(Number(e))?10:Number(e):s?10:void 0).pipe(z$1.number().optional()),Mi=z$1.string().optional().transform(s=>s?String(s):void 0);z$1.object({from:z$1.string().optional().refine(s=>!s||/^\d{4}-\d{2}-\d{2}$/.test(s),{message:"Date must be in YYYY-MM-DD format"}).transform(s=>s?new Date(s):void 0),to:z$1.string().optional().refine(s=>!s||/^\d{4}-\d{2}-\d{2}$/.test(s),{message:"Date must be in YYYY-MM-DD format"}).transform(s=>s?new Date(s):void 0)}).refine(s=>s.from&&s.to?s.from<=s.to:true,{message:"Start date cannot be after end date",path:["from"]});var j=s=>{let{sortMethodSchema:e,sortBySchema:r}=qi(s);return z$1.preprocess(t=>{let o=t.page?isNaN(t.page)?1:Number(t.page):void 0,i=!!o;return {page:o,limit:Li(i).parse(t.limit),sortingMethod:e(i).parse(t.sortingMethod),sortBy:r(i).parse(t.sortBy),search:Mi.parse(t.search),from:t.from,to:t.to}},z$1.object({page:b("Page").optional(),limit:b("Limit").optional(),sortingMethod:h("Sorting Method").optional(),sortBy:h("Sort By").optional(),search:h("Search").optional(),from:h("From Date").optional(),to:h("To Date").optional()}))};var co=s=>{let e=j(s);return z$1.preprocess(r=>({...e.parse(r)}),z$1.object({...e.innerType().shape}))},po=z$1.object({portfolioId:b("Portfolio ID"),netRentalIncome:b("Net Rental Income"),expenses:b("Expenses")});z$1.object({portfolioId:b("Portfolio ID"),totalShares:b("Total Shares"),dividend:b("Dividend")});var uo=s=>{let e=j(s);return z$1.preprocess(r=>({...e.parse(r)}),z$1.object({...e.innerType().shape}))};z$1.object({ids:h("Portfolio IDs").optional().transform(s=>s?s.split(","):[]).refine(s=>s.length===0||s.every(e=>!isNaN(Number(e))),R.error.invalid.invalidNumber("Portfolio IDs")).transform(s=>s.map(Number))});var Lt=z$1.object({title:h("Portfolio title"),slug:h("Portfolio slug"),description:h("Portfolio description"),featuredImageId:b("Portfolio featured image ID"),galleryImages:z$1.array(b("Portfolio gallery images"),{required_error:"Portfolio gallery images are required"}).optional(),price:b("Portfolio price"),shares:b("Portfolio shares"),sharePrice:b("Portfolio share price")});var x=class{page;limit;totalItems;constructor(e,r,t){this.page=e,this.limit=r,this.totalItems=t;}createPagination(){let e=Math.ceil(this.totalItems/this.limit),r=this.page;this.page>e&&e>0&&(r=e);let t=(r-1)*this.limit;return {pagination:{totalItems:this.totalItems,limit:this.limit,offset:t,currentPage:r,totalPages:e,hasPrevPage:r>1,hasNextPage:r<e,prevPage:r>1?r-1:null,nextPage:r<e?r+1:null},offset:t}}};var Z=class extends _{sortingHelper;authService;constructor(){super(),this.sortingHelper=new P(m),this.authService=new C;}async validateSlug(e,r){try{let t=await this.db.query.portfolios.findFirst({where:eq(m.slug,e)});if(!t||r&&t.id===r)return n.createResponse(a.HTTP_200_OK,"Slug is unique",e);let o=e.replace(/\-\d+$/,""),i=1,c=e.match(/\-(\d+)$/);c&&(i=parseInt(c[1],10)+1);let p=`${o}-${i}`,d=!0;for(;d;){let T=await this.db.query.portfolios.findFirst({where:eq(m.slug,p)});!T||r&&T.id===r?d=!1:(i++,p=`${o}-${i}`);}return n.createResponse(a.HTTP_200_OK,"Slug is unique",p)}catch(t){return n.createErrorResponse(t)}}async createPortfolio(e){try{let{galleryImages:r,...t}=e,o=await this.db.insert(m).values(t).returning().then(i=>i[0]);return await this.db.insert(G).values(r.map((i,c)=>({portfolioId:o.id,mediaId:i,displayOrder:c}))),o?n.createResponse(a.HTTP_201_CREATED,"Portfolio created successfully",o):n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Portfolio not created")}catch(r){return n.createErrorResponse(r)}}async retrievePortfolioById(e){try{let r=await this.db.query.portfolios.findFirst({where:eq(m.id,e),with:{author:{columns:{name:!0}},featuredImage:{columns:{id:!0,secureUrl:!0,fileName:!0,url:!0}},galleryImages:{columns:{},with:{media:{columns:{id:!0,secureUrl:!0,fileName:!0,url:!0}}}}}});return r?n.createResponse(a.HTTP_200_OK,"Portfolio retrieve successfully",r):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Portfolio not found")}catch(r){return n.createErrorResponse(r)}}async retrievePortfolioBySlug(e){try{let r=await this.db.query.portfolios.findFirst({where:eq(m.slug,e),with:{author:{columns:{name:!0}},featuredImage:{columns:{id:!0,secureUrl:!0,fileName:!0,url:!0}},galleryImages:{columns:{},with:{media:{columns:{id:!0,secureUrl:!0,fileName:!0,url:!0}}}}}});return r?n.createResponse(a.HTTP_200_OK,"Portfolio retrieve successfully",r):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Portfolio not found")}catch(r){return n.createErrorResponse(r)}}async retrieveAllPortfolios(e){try{let r=this.sortingHelper.applySorting(e.sortingMethod,e.sortBy);if(!e.page||!e.limit)return await this.retrieveAll(e.sortingMethod,e.sortBy);let t=e.from?new Date(e.from):void 0,o=e.to?new Date(e.to):void 0;o&&o.setHours(23,59,59,999);let i=[e.search?ilike(m.title,`%${e.search}%`):void 0,t?gte(m.createdAt,t):void 0,o?lte(m.createdAt,o):void 0].filter(Boolean),c=i.length>0?and(...i):void 0,p=await this.db.select({count:count()}).from(m).where(c).then(v=>v[0].count),{pagination:d,offset:T}=new x(e.page,e.limit,p).createPagination(),y=await this.db.query.portfolios.findMany({where:c,limit:e.limit?e.limit:void 0,offset:e.limit?T:void 0,orderBy:r,with:{author:{columns:{name:!0}},featuredImage:{columns:{id:!0,secureUrl:!0,fileName:!0,url:!0}},galleryImages:{columns:{},with:{media:{columns:{id:!0,secureUrl:!0,fileName:!0,url:!0}}}}}});return n.createResponse(a.HTTP_200_OK,"Portfolios retrieve successfully",y,d)}catch(r){return n.createErrorResponse(r)}}async retrieveAll(e,r){try{let t=this.sortingHelper.applySorting(e,r),o=await this.db.query.portfolios.findMany({orderBy:t,with:{author:{columns:{name:!0}},featuredImage:{columns:{id:!0,secureUrl:!0,fileName:!0,url:!0}},galleryImages:{columns:{},with:{media:{columns:{id:!0,secureUrl:!0,fileName:!0,url:!0}}}}}});return n.createResponse(a.HTTP_200_OK,"Portfolios retrieve successfully",o)}catch(t){return n.createErrorResponse(t)}}async retrieveAllPortfoliosIdsNamesAndSlugs(){try{let e=await this.db.query.portfolios.findMany({columns:{id:!0,title:!0,slug:!0}});return n.createResponse(a.HTTP_200_OK,"Portfolios retrieve successfully",e)}catch(e){return n.createErrorResponse(e)}}async updatePortfolio(e,r){try{let t=await this.db.update(m).set(r).where(eq(m.id,e)).returning().then(o=>o[0]);return r.galleryImages&&await this.updatePortfolioGalleryImages(e,r.galleryImages),n.createResponse(a.HTTP_200_OK,"Portfolio updated successfully",t)}catch(t){return n.createErrorResponse(t)}}async updatePortfolioGalleryImages(e,r){try{let o=(await this.db.query.portfolioGalleryImages.findMany({where:eq(G.portfolioId,e)})).map(d=>d.mediaId),i=o.filter(d=>!r.includes(d));i.length>0&&await this.db.delete(G).where(and(eq(G.portfolioId,e),inArray(G.mediaId,i)));let c=r.filter(d=>!o.includes(d));c.length>0&&await this.db.insert(G).values(c.map((d,T)=>({portfolioId:e,mediaId:d,displayOrder:T})));let p=await this.retrievePortfolioById(e);return n.createResponse(a.HTTP_200_OK,"Portfolio gallery images updated successfully",p.data)}catch(t){return n.createErrorResponse(t)}}async deletePortfolio(e){try{return await this.db.delete(m).where(eq(m.id,e)).returning().then(t=>t[0])?n.createResponse(a.HTTP_200_OK,"Portfolio deleted successfully",!0):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Portfolio not found")}catch(r){return n.createErrorResponse(r)}}async deductInvestmentAmountForPortfolio(e,r,t){try{let o=await this.retrievePortfolioById(r),i=t*o.data.sharePrice,c=o.data.remainingShares-t,p=o.data.remainingInvestment-i,d=await this.db.update(m).set({remainingShares:c,remainingInvestment:p}).where(eq(m.id,r)).returning();return await this.addInvestment(e,t,o.data.sharePrice,i,r),n.createResponse(a.HTTP_200_OK,"Portfolio investment amount deducted successfully",d[0])}catch(o){return n.createErrorResponse(o)}}async addInvestment(e,r,t,o,i){try{let c=await this.authService.findUserById(e),p=await this.db.insert(te).values({shares:r,sharePrice:t,totalInvestment:o,investorId:c.data.id,portfolioId:i}).returning();return n.createResponse(a.HTTP_200_OK,"Portfolio investment amount deducted successfully",p[0])}catch(c){return n.createErrorResponse(c)}}async retrieveLastPortfolio(){try{let e=await this.db.query.portfolios.findFirst({with:{author:{columns:{name:!0}},featuredImage:{columns:{id:!0,secureUrl:!0,fileName:!0,url:!0}},galleryImages:{columns:{},with:{media:{columns:{id:!0,secureUrl:!0,fileName:!0,url:!0}}}}}});return e?n.createResponse(a.HTTP_200_OK,"Portfolios retrieve successfully",e):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Portfolio not found")}catch(e){return n.createErrorResponse(e)}}};var ho=s=>{let e=j(s);return z$1.preprocess(r=>({...e.parse(r)}),z$1.object({...e.innerType().shape}))};var le=class extends _{sortingHelper;constructor(){super(),this.sortingHelper=new P(w);}async createWallet(e){try{if((await this.checkUserNullWalletExists(e.userId)).data){let t=await this.db.insert(w).values(e).returning();return n.createResponse(a.HTTP_201_CREATED,q.success.create("Wallet"),t[0])}else return n.createResponse(a.HTTP_200_OK,q.error.create.alreadyExists("Wallet"),!0)}catch(r){return n.createErrorResponse(r)}}async createWallets(e){try{let r=await this.db.insert(w).values(e).returning();return n.createResponse(a.HTTP_201_CREATED,q.success.create("Wallet"),r)}catch(r){return n.createErrorResponse(r)}}async retrieveWallet(e,r){try{let t=this.sortingHelper.applySorting(r.sortingMethod,r.sortBy);if(!r.page||!r.limit)return await this.retrieveAll(e,r.sortingMethod,r.sortBy);let o=r.from?new Date(r.from):void 0,i=r.to?new Date(r.to):void 0;i&&i.setHours(23,59,59,999);let c=[eq(w.userId,e),r.search?ilike(w.amount,`%${r.search}%`):void 0,o?gte(w.createdAt,o):void 0,i?lte(w.createdAt,i):void 0].filter(Boolean),p=c.length>0?and(...c):void 0,d=await this.db.select({count:count()}).from(w).where(p).then(N=>N[0].count),{pagination:T,offset:y}=new x(r.page,r.limit,d).createPagination(),v=await this.db.query.wallet.findMany({where:p,limit:r.limit?r.limit:void 0,offset:r.limit?y:void 0,orderBy:t});return n.createResponse(a.HTTP_200_OK,q.success.read("Wallet"),v,T)}catch(t){return n.createErrorResponse(t)}}async retrieveAll(e,r,t){try{let o=this.sortingHelper.applySorting(r,t),i=await this.db.query.wallet.findMany({where:eq(w.userId,e),orderBy:o});return n.createResponse(a.HTTP_200_OK,"Wallets retrieve successfully",i)}catch(o){return n.createErrorResponse(o)}}async retrieveLastSixMonthsWallet(e){try{let r=new Date;r.setMonth(r.getMonth()-6);let t=await this.db.query.wallet.findMany({where:and(eq(w.userId,e),not(isNull(w.balanceType)),gte(w.createdAt,r)),orderBy:desc(w.createdAt)});return n.createResponse(a.HTTP_200_OK,q.success.read("Wallet"),t)}catch(r){return n.createErrorResponse(r)}}async retrieveLastThreeMonthsWallet(e){try{let r=new Date;r.setMonth(r.getMonth()-3);let t=await this.db.query.wallet.findMany({where:and(eq(w.userId,e),not(isNull(w.balanceType)),gte(w.createdAt,r)),orderBy:desc(w.createdAt)});return n.createResponse(a.HTTP_200_OK,q.success.read("Wallet"),t)}catch(r){return n.createErrorResponse(r)}}async retrieveWalletBalance(e){try{let r=await this.db.query.wallet.findFirst({where:eq(w.userId,e),orderBy:desc(w.createdAt)}),t=await this.db.query.wallet.findMany({where:and(eq(w.userId,e),not(isNull(w.balanceType)))}),o=t.filter(c=>c.balanceType==="CREDIT").reduce((c,p)=>c+p.amount,0),i=t.filter(c=>c.balanceType==="DEBIT").reduce((c,p)=>c+p.amount,0);return n.createResponse(a.HTTP_200_OK,q.success.read("Wallet"),{balance:r?.remainingAmount??0,cashIn:o,cashOut:i})}catch(r){return n.createErrorResponse(r)}}async retrieveCurrentRemainingAmount(e,r,t){try{let o=await this.db.query.wallet.findFirst({where:eq(w.userId,e),orderBy:desc(w.createdAt)}),i=t==="CREDIT"?(o?.remainingAmount||0)+r:(o?.remainingAmount||0)-r;return n.createResponse(a.HTTP_200_OK,q.success.read("Wallet"),{remainingAmount:i??0})}catch(o){return n.createErrorResponse(o)}}async checkUserNullWalletExists(e){try{let r=await this.db.query.wallet.findFirst({where:and(eq(w.userId,e),isNull(w.balanceType))});return n.createResponse(a.HTTP_200_OK,q.success.read("Wallet"),!!r)}catch(r){return n.createErrorResponse(r)}}};var ze=class extends _{sortingHelper;portfolioService;walletService;constructor(){super(),this.portfolioService=new Z,this.sortingHelper=new P(H),this.walletService=new le;}async createPortfolioDividend(e){try{let r=await this.portfolioService.retrievePortfolioById(e.portfolioId),t=await this.db.insert(Ee).values(e).returning();return await this.distributeDividend(r.data,t[0].totalRevenue),n.createResponse(a.HTTP_201_CREATED,q.success.create("Portfolio Dividend"),t[0])}catch(r){return n.createErrorResponse(r)}}async retrievePortfolioDividend(){try{let e=await this.db.query.portfolioDividend.findMany({orderBy:desc(Ee.createdAt),with:{portfolio:{columns:{id:!0,title:!0,slug:!0},with:{featuredImage:{columns:{id:!0,url:!0,secureUrl:!0}}}}}});return n.createResponse(a.HTTP_200_OK,q.success.read("Portfolio Dividend"),e)}catch(e){return n.createErrorResponse(e)}}async retrievePortfolioDividendById(e){try{let r=await this.db.query.portfolioDividend.findFirst({where:eq(Ee.portfolioId,e),with:{portfolio:!0}});return r?n.createResponse(a.HTTP_200_OK,q.success.read("Portfolio Dividend"),r):n.createRejectResponse(a.HTTP_404_NOT_FOUND,q.error.read.notFound("Portfolio Dividend"))}catch(r){return n.createErrorResponse(r)}}async retrieveUserDividendByUserId(e,r){try{let t=this.sortingHelper.applySorting(r.sortingMethod,r.sortBy);if(!r.page||!r.limit)return await this.retrieveAll(e,r.sortingMethod,r.sortBy);let o=r.from?new Date(r.from):void 0,i=r.to?new Date(r.to):void 0;i&&i.setHours(23,59,59,999);let c=[eq(H.userId,e),r.search?ilike(H.dividend,`%${r.search}%`):void 0,o?gte(H.createdAt,o):void 0,i?lte(H.createdAt,i):void 0].filter(Boolean),p=c.length>0?and(...c):void 0,d=await this.db.select({count:count()}).from(H).where(p).then(N=>N[0].count),{pagination:T,offset:y}=new x(r.page,r.limit,d).createPagination(),v=await this.db.query.userDividend.findMany({where:p,limit:r.limit?r.limit:void 0,offset:r.limit?y:void 0,orderBy:t});return n.createResponse(a.HTTP_200_OK,q.success.read("User Dividend"),v,T)}catch(t){return n.createErrorResponse(t)}}async retrieveAll(e,r,t){try{let o=this.sortingHelper.applySorting(r,t),i=await this.db.query.userDividend.findMany({where:eq(H.userId,e),orderBy:o});return n.createResponse(a.HTTP_200_OK,"Wallets retrieve successfully",i)}catch(o){return n.createErrorResponse(o)}}async retrieveUserTotalDividendByUserId(e){try{let t=(await this.db.query.userDividend.findMany({where:eq(H.userId,e),with:{portfolio:{columns:{title:!0,slug:!0}}}})).reduce((o,i)=>o+i.dividend,0);return n.createResponse(a.HTTP_200_OK,q.success.read("User Dividend"),t)}catch(r){return n.createErrorResponse(r)}}async retrieveUserDividendByPortfolioId(e){try{let r=await this.db.query.userDividend.findMany({where:eq(H.portfolioId,e),with:{user:!0,portfolio:!0}});return n.createResponse(a.HTTP_200_OK,q.success.read("User Dividend"),r)}catch(r){return n.createErrorResponse(r)}}async distributeDividend(e,r){try{let t=r/e.shares,o=new Date;o.setDate(o.getDate()-30);let c=(await this.db.query.investments.findMany({where:and(eq(te.portfolioId,e.id),lte(te.createdAt,o))})).reduce((y,v)=>(y[v.investorId]?y[v.investorId]+=v.shares:y[v.investorId]=v.shares,y),{}),p=Object.entries(c).map(([y,v])=>({userId:Number(y),portfolioId:e.id,totalShares:v,dividend:t*v}));if(p.length===0)return n.createRejectResponse(a.HTTP_404_NOT_FOUND,"No investments were found for this portfolio");let d=await this.db.insert(H).values(p).returning(),T=await Promise.all(d.map(async y=>{let v=await this.walletService.retrieveCurrentRemainingAmount(y.userId,y.dividend,"CREDIT");return {userId:y.userId,amount:y.dividend,remainingAmount:v.data.remainingAmount,balanceType:"CREDIT"}}));return await this.walletService.createWallets(T),n.createResponse(a.HTTP_201_CREATED,q.success.create("User Dividends"),d)}catch(t){return n.createErrorResponse(t)}}};var E=class{request;response;searchParams;apiResponse;constructor(e,r){this.request=e,this.response=r,this.apiResponse=new se(r),this.searchParams=this.getQueryParam(e);}getReqBody(){return this.request.body}getQueryParam(e){let r=e.query,t={get:(o,i)=>o[i]||null};return new Proxy(r,t)}};var Pr=class{request;response;jwtCookieName;sessionCookieName;constructor(e,r){this.request=e,this.response=r,this.jwtCookieName=process.env.JWT_COOKIE_NAME,this.sessionCookieName=process.env.SESSION_COOKIE_NAME;}async saveCookieToBrowser(e){try{let r=await as({token:e});return this.response.cookie(this.jwtCookieName,r,{httpOnly:!0,maxAge:18e6,sameSite:k.sameSiteCookieConfig().sameSite,secure:k.sameSiteCookieConfig().secure,...k.sameSiteCookieConfig().domain&&{domain:k.sameSiteCookieConfig().domain}}),Promise.resolve(r)}catch{return Promise.resolve(null)}}async clearCookieFromBrowser(){this.response.clearCookie(this.jwtCookieName),this.response.clearCookie(this.sessionCookieName);}};var ra=process.cwd(),ta=async({email:s,emailSubject:e,template:r,data:t,user:o=process.env.EMAIL_SERVER_USER,password:i=process.env.EMAIL_SERVER_PASSWORD,emailFrom:c=process.env.EMAIL_FROM})=>{let p=Zi.createTransport({host:process.env.EMAIL_SERVER_HOST,port:Number(process.env.EMAIL_SERVER_PORT),auth:{user:o,pass:i},secure:false});try{await p.verify(),console.log("SMTP server connection verified successfully");}catch(y){console.error("SMTP connection error:",y);}let d=await Xi.renderFile(ea.join(ra,"src/templates",`${r}.ejs`),t,{async:true}),T={from:c,to:s,reply_to:c,subject:e,html:d};try{let y=await p.sendMail(T);return console.log("Email sent: %s",y.messageId),Promise.resolve(y)}catch(y){return console.error("Email sending failed:",y),Promise.resolve({success:false,error:y.message||"Email sending failed"})}},Oe=ta;var U=class extends E{authenticationService;otpService;cookieService;walletService;dividendService;constructor(e,r){super(e,r),this.authenticationService=new C,this.otpService=new We,this.cookieService=new Pr(e,r),this.walletService=new le,this.dividendService=new ze;}async register(){try{let e=this.getReqBody(),r=ro.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(c=>c.message).join(" "));let t={...r.data,image:null,emailVerified:null,password:Ws.hashSync(r.data.password,10)},o=await this.authenticationService.createUser(t),i=await this.otpService.saveOTPToDatabase(o.data,ue.EMAIL_VERIFICATION);return i&&o.data.email&&Oe({email:o.data.email,emailSubject:"Your account verification OTP",template:"otpEmailTemplate",data:{username:o.data.username,otp:i,otpExpirationTime:5}}),this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async loginWithUsername(){try{let e=this.getReqBody(),r=Ht.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(y=>y.message).join(" "));let t=await this.authenticationService.findUserByUsernameOrEmail(r.data.username);await this.authenticationService.checkAccountVerification(t.data.id),await this.authenticationService.passwordChecker(r.data.password,t.data.password);let{password:o,...i}=t.data,c=await this.cookieService.saveCookieToBrowser(i),p=await this.walletService.retrieveWalletBalance(i.id),d=await this.dividendService.retrieveUserTotalDividendByUserId(i.id),T={...i,walletBalance:p.data.balance,dividend:d.data};this.request.login(T,y=>y?this.apiResponse.sendResponse({status:a.HTTP_500_INTERNAL_SERVER_ERROR,message:"Login failed"}):this.apiResponse.successResponse("Login successful",{user:i,token:c}));}catch(e){return this.apiResponse.sendResponse(e)}}async loginWithUsernameAndOTP(){try{let e=this.getReqBody(),r=eo.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(y=>y.message).join(" "));let t=await this.authenticationService.findUserByUsernameOrEmail(r.data.username);await this.authenticationService.checkAccountVerification(t.data.id),await this.authenticationService.passwordChecker(r.data.password,t.data.password);let{password:o,...i}=t.data;await this.otpService.verifyOTPFromDatabase(i,String(r.data.otp),ue.LOGIN_OTP);let c=await this.cookieService.saveCookieToBrowser(i),p=await this.walletService.retrieveWalletBalance(i.id),d=await this.dividendService.retrieveUserTotalDividendByUserId(i.id),T={...i,walletBalance:p.data.balance,dividend:d.data};this.request.login(T,y=>y?this.apiResponse.sendResponse({status:a.HTTP_500_INTERNAL_SERVER_ERROR,message:"Login failed"}):this.apiResponse.successResponse("Login successful",{user:i,token:c}));}catch(e){return this.apiResponse.sendResponse(e)}}async loginWithGoogle(){try{let{user:e}=this.request;await this.cookieService.saveCookieToBrowser(e);let r=process.env.APP_URL+"?success=Google";return this.response.redirect(r)}catch(e){return this.apiResponse.sendResponse(e)}}async logout(){try{this.request.session.destroy(e=>e?this.apiResponse.sendResponse({status:a.HTTP_500_INTERNAL_SERVER_ERROR,message:"Error logging out"}):(this.cookieService.clearCookieFromBrowser(),this.apiResponse.successResponse("Logged out")));}catch(e){return this.apiResponse.sendResponse(e)}}async getSession(){try{let e=this.request.user;if(!e)return this.apiResponse.successResponse("Unauthorized");let r=await this.walletService.retrieveWalletBalance(e.id),t=await this.dividendService.retrieveUserTotalDividendByUserId(e.id),o={...e,walletBalance:r.data.balance,dividend:t.data};return this.apiResponse.successResponse("Authorized",o)}catch(e){return this.apiResponse.sendResponse(e)}}async verifySession(){try{return this.apiResponse.successResponse("Authorized")}catch(e){return this.apiResponse.sendResponse(e)}}async checkAccountVerification(){try{return this.request.user?.emailVerified?this.apiResponse.successResponse("User is verified"):(this.request.session.destroy(r=>r?this.apiResponse.sendResponse({status:a.HTTP_500_INTERNAL_SERVER_ERROR,message:"Error logging out"}):(this.cookieService.clearCookieFromBrowser(),this.apiResponse.unauthorizedResponse("Unauthorized: Account is not verified"))),this.apiResponse.unauthorizedResponse("Unauthorized: Account is not verified"))}catch(e){return this.apiResponse.sendResponse(e)}}async checkUser(){try{let{body:e}=this.request,r=Ht.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(i=>i.message).join(" "));let t=await this.authenticationService.findUserByUsernameOrEmail(r.data.username);await this.authenticationService.passwordChecker(r.data.password,t.data.password);let o;return r.data.otp&&(await this.authenticationService.checkAccountVerification(t.data?.id),o=await this.otpService.saveOTPToDatabase(t.data,ue.LOGIN_OTP),o&&t.data.email&&Oe({email:t.data.email,emailSubject:"Login OTP",template:"otpEmailTemplate",data:{username:t.data?.username,otp:o,otpExpirationTime:5}})),this.apiResponse.successResponse("User found",o)}catch(e){return this.apiResponse.sendResponse(e)}}async verifyUser(){try{let{body:e}=this.request,r=to.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.authenticationService.findUserByUsernameOrEmail(r.data.username);return await this.otpService.verifyOTPFromDatabase(t.data,String(r.data.otp),ue.EMAIL_VERIFICATION),await this.authenticationService.accountVerification(t.data.id),this.apiResponse.successResponse("User verified")}catch(e){return this.apiResponse.sendResponse(e)}}async getProfile(){try{let{user:e}=this.request,r=await this.authenticationService.retrieveUserProfile(e?.id);return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}async updateProfile(){try{let{body:e,user:r}=this.request,t=ao.safeParse(e);if(!t.success)return this.apiResponse.badResponse(t.error.errors.map(i=>i.message).join(" "));let o=await this.authenticationService.updateUserProfile(r?.id,t.data);return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async resetPassword(){try{let{body:e}=this.request;if(!e.email)return this.apiResponse.badResponse("Email is required");let r=await this.authenticationService.findUserByEmail(e.email),t=await this.otpService.saveOTPToDatabase(r.data,ue.PASSWORD_RESET);return t&&r.data.email&&Oe({email:r.data.email,emailSubject:"Your password reset OTP",template:"otpEmailTemplate",data:{username:r.data?.username,otp:t,otpExpirationTime:5}}),this.apiResponse.successResponse("Password reset OTP sent")}catch(e){return this.apiResponse.sendResponse(e)}}async resetPasswordOTPCheck(){try{let{body:e}=this.request,r=oo.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.authenticationService.findUserByUsernameOrEmail(r.data.email);return await this.authenticationService.checkAccountVerification(t.data.id),await this.otpService.checkOTPInDatabase(t.data,String(r.data.otp),ue.PASSWORD_RESET),this.apiResponse.successResponse("OTP verified")}catch(e){return this.apiResponse.sendResponse(e)}}async resetPasswordConfirm(){try{let{body:e}=this.request,r=no.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.authenticationService.findUserByEmail(r.data.email);return await this.otpService.verifyOTPFromDatabase(t.data,String(r.data.otp),ue.PASSWORD_RESET),await this.authenticationService.changePassword(t.data.id,r.data.password),this.apiResponse.successResponse("User password reset")}catch(e){return this.apiResponse.sendResponse(e)}}async changePassword(){try{let{body:e,user:r}=this.request,t=io.safeParse(e);if(!t.success)return this.apiResponse.badResponse(t.error.errors.map(c=>c.message).join(" "));let o=await this.authenticationService.findUserById(r?.id,!0);await this.authenticationService.passwordChecker(t.data.oldPassword,o.data.password);let i=await this.authenticationService.changePassword(o.data.id,t.data.newPassword);return this.apiResponse.sendResponse(i)}catch(e){return this.apiResponse.sendResponse(e)}}async requestOTPForUnverifiedUser(){try{let{body:e}=this.request,r=so.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(i=>i.message).join(" "));let t=await this.authenticationService.findUserByUsernameOrEmail(r.data.username);if(t.data.emailVerified)return this.apiResponse.badResponse("User is already verified");let o=await this.otpService.saveOTPToDatabase(t.data,ue.EMAIL_VERIFICATION);return o&&t.data.email&&Oe({email:t.data.email,emailSubject:"Your account verification OTP",template:"otpEmailTemplate",data:{username:t.data?.username,otp:o,otpExpirationTime:5}}),this.apiResponse.successResponse("OTP sent")}catch(e){return this.apiResponse.sendResponse(e)}}async uploadAvatar(){try{let{body:e,user:r}=this.request;if(!e.avatarUrl)return this.apiResponse.badResponse("Avatar is required");let t=await this.authenticationService.uploadAvatar(r?.id,e.avatarUrl);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}};var wr=process.env.JWT_COOKIE_NAME,Jr=process.env.SESSION_COOKIE_NAME,f=async(s,e,r)=>{let t=new se(e);try{let o=s.cookies[wr];if(!o){e.clearCookie(wr),e.clearCookie(Jr),t.unauthorizedResponse("Unauthorized: No token provided");return}if(!await Lr({token:o})){e.clearCookie(wr),e.clearCookie(Jr),t.unauthorizedResponse("Unauthorized: Invalid token");return}if(!s.isAuthenticated()){e.clearCookie(wr),e.clearCookie(Jr),t.unauthorizedResponse("Unauthorized: Not authenticated");return}r();}catch(o){e.clearCookie(wr),e.clearCookie(Jr),console.error("Authentication middleware error:",o),t.unauthorizedResponse("Unauthorized");return}};var vo=(()=>{let s=To.Router();return s.get("/me",(e,r)=>{new U(e,r).getSession();}),s.get("/session",f,(e,r)=>{new U(e,r).verifySession();}),s.get("/account-verification",f,(e,r)=>{new U(e,r).checkAccountVerification();}),s.post("/register",(e,r)=>{new U(e,r).register();}),s.post("/request-otp",(e,r)=>{new U(e,r).requestOTPForUnverifiedUser();}),s.post("/login",async(e,r)=>{new U(e,r).loginWithUsername();}),s.post("/login/otp",async(e,r)=>{new U(e,r).loginWithUsernameAndOTP();}),s.get("/login/google",Ct.authenticate("google",{scope:["profile","email"]})),s.get("/google/callback",Ct.authenticate("google",{failureRedirect:"/login"}),(e,r)=>{new U(e,r).loginWithGoogle();}),s.post("/verify-user",(e,r)=>{new U(e,r).verifyUser();}),s.post("/check-user",(e,r)=>{new U(e,r).checkUser();}),s.route("/profile").get(f,(e,r)=>{new U(e,r).getProfile();}).put(f,(e,r)=>{new U(e,r).updateProfile();}),s.post("/upload-avatar",f,(e,r)=>{new U(e,r).uploadAvatar();}),s.post("/reset-password",(e,r)=>{new U(e,r).resetPassword();}),s.post("/reset-password/otp-check",async(e,r)=>{new U(e,r).resetPasswordOTPCheck();}),s.post("/reset-password/confirm",(e,r)=>{new U(e,r).resetPasswordConfirm();}),s.post("/change-password",f,(e,r)=>{new U(e,r).changePassword();}),s.post("/logout",f,(e,r)=>{new U(e,r).logout();}),s})(),go=To.Router();var _r=class extends _{constructor(){super(),v2.config({cloud_name:process.env.CLOUDINARY_CLOUD_NAME,api_key:process.env.CLOUDINARY_API_KEY,api_secret:process.env.CLOUDINARY_API_SECRET});}managedData(e){let r=t=>({pdf:"PDF",doc:"DOC",docx:"DOCX",xls:"XLS",xlsx:"XLSX",ppt:"PPT",pptx:"PPTX",txt:"TXT",csv:"CSV"})[t.toLowerCase()]||"PDF";return {fileName:e.fileName,fileSize:e.bytes,mimeType:e.format,documentType:r(e.format),provider:"CLOUDINARY",storageId:e.asset_id,url:e.url,secureUrl:e.secure_url,storageMetadata:JSON.stringify(e),pageCount:e.pages||null,wordCount:null,duration:0,isPublic:true,isFeatured:false,isArchived:false,description:null,tags:null,version:"1.0"}}async saveToDatabase(e){try{if(Array.isArray(e)){let r=await this.db.insert(Ie).values(e).returning();return Promise.resolve(r)}else {let r=await this.db.insert(Ie).values(e).returning();return Promise.resolve(r)}}catch(r){return n.createErrorResponse(r)}}async uploadSingleDocument(e,r){let t=await r.file.arrayBuffer(),o=Buffer.from(t);return new Promise((i,c)=>{v2.uploader.upload_stream({resource_type:"auto",folder:e},(p,d)=>{if(p)return c(p);if(d){let T={...d,fileName:r.fileName};return i(T)}else return c(new Error("Upload failed: No result returned"))}).end(o);})}async deleteUploadedDocument(e){return new Promise(async(r,t)=>{try{let o=await v2.uploader.destroy(e);return r(o)}catch(o){t(new Error(o.message));}})}async retrieve(){try{let e=await this.db.query.dataRoom.findMany({orderBy:desc(Ie.createdAt)});return n.createResponse(a.HTTP_200_OK,"Documents retrieved successfully",e)}catch(e){return n.createErrorResponse(e)}}async uploadDocument(e,r){let t=r.map(async o=>{let i=await this.uploadSingleDocument(e,o);return this.managedData(i)});return Promise.all(t)}async uploadFile(e){try{let r=await this.uploadDocument("Data Room",e),t=await this.saveToDatabase(r);return n.createResponse(a.HTTP_200_OK,"File uploaded successfully",t)}catch(r){return n.createErrorResponse(r)}}async deleteFile(e){try{let r=await this.db.delete(Ie).where(eq(Ie.id,e)).returning().then(t=>t[0]);return this.deleteUploadedDocument(r.storageMetadata.public_id),n.createResponse(a.HTTP_200_OK,"File deleted successfully",r)}catch(r){return n.createErrorResponse(r)}}async updateFile(e,r){try{let t=await this.db.update(Ie).set({fileName:r}).where(eq(Ie.id,e)).returning().then(o=>o[0]);return n.createResponse(a.HTTP_200_OK,"File updated successfully",t)}catch(t){return n.createErrorResponse(t)}}};z$1.record(z$1.string(),z$1.union([z$1.string().optional(),z$1.instanceof(File)]));var Me=class extends E{dataRoomService;acceptableTypes=["application/pdf","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.ms-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation","text/plain","text/csv"];constructor(e,r){super(e,r),this.dataRoomService=new _r;}async index(){try{let e=await this.dataRoomService.retrieve();return this.apiResponse.sendResponse(e)}catch(e){return this.apiResponse.sendResponse(e)}}async upload(){try{let e=this.request.files;if(!e||e.length===0)return this.response.status(400).json({message:"No files uploaded"});let r=e.map(c=>({file:new File([c.buffer],c.originalname,{type:c.mimetype}),fileName:c.originalname})),t=await this.dataRoomService.uploadFile(r),o=t.data?.map(c=>({fileName:c.fileName,success:!0,url:c.url}))||[],i=t.data.map(c=>{let p=c.mimeType,d=c.fileName.replace(/\.[^/.]+$/,"");return {fileName:d,success:!0,fileData:{name:d,size:c.fileSize,type:p}}});return this.apiResponse.successResponse(`${o.length} file${o.length!==1?"s":""} uploaded successfully`,i)}catch(e){return this.apiResponse.sendResponse(e)}}async update(){try{let{params:e,body:r}=this.request;if(!r.name)return this.apiResponse.badResponse("File name is required");let t=await this.dataRoomService.updateFile(Number(e.id),r.name);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async delete(){try{let{params:e}=this.request,r=await this.dataRoomService.deleteFile(Number(e.id));return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}};var I=class{req;res;next;apiResponse;constructor(e,r,t){this.req=e,this.res=r,this.next=t,this.apiResponse=new se(r);}async isAdmin(){try{let{user:e}=this.req;if(!e){this.apiResponse.unauthorizedResponse("Unauthorized: No user found");return}if(e.role!=="ADMIN"){this.apiResponse.unauthorizedResponse("Unauthorized: Not an admin");return}this.next();}catch(e){console.error("Authorization middleware error:",e),this.apiResponse.unauthorizedResponse("Unauthorized");return}}};var aa=ia(),Po=(()=>{let s=To.Router();return s.route("/upload").get(async(e,r)=>{new Me(e,r).index();}).post(aa.any(),f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new Me(e,r).upload();}),s.put("/update/:id",f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new Me(e,r).update();}),s.route("/delete/:id").delete(f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new Me(e,r).delete();}),s})();var Be=class extends E{sortingHelper;dividendService;constructor(e,r){super(e,r),this.sortingHelper=new P(m),this.dividendService=new ze;}async createPortfolioDividend(){try{let{body:e}=this.request,r=po.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(c=>c.message).join(" "));let t=r.data.netRentalIncome-r.data.expenses,o={...r.data,totalRevenue:t},i=await this.dividendService.createPortfolioDividend(o);return this.apiResponse.sendResponse(i)}catch(e){return this.apiResponse.sendResponse(e)}}async retrievePortfolioDividend(){try{let e=await this.dividendService.retrievePortfolioDividend();return this.apiResponse.sendResponse(e)}catch(e){return this.apiResponse.sendResponse(e)}}async retrievePortfolioDividendById(){try{let{id:e}=this.request.params,r=await this.dividendService.retrievePortfolioDividendById(Number(e));return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveUserDividendByUserId(){try{let{query:e}=this.request,r=co(this.sortingHelper).safeParse(e);if(!r.success){let i=r.error.issues.map(c=>{let p=c.path.join(".");return `${p.charAt(0).toUpperCase()+p.slice(1)} is required.`});return this.apiResponse.badResponse(i.join(" "))}let{user:t}=this.request,o=await this.dividendService.retrieveUserDividendByUserId(Number(t?.id),r.data);return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveUserDividendByPortfolioId(){try{let{id:e}=this.request.params,r=await this.dividendService.retrieveUserDividendByPortfolioId(Number(e));return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}};var wo=(()=>{let s=To.Router();return s.get("/admin/portfolio",f,async(e,r)=>{new Be(e,r).retrievePortfolioDividend();}),s.post("/admin/create",f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new Be(e,r).createPortfolioDividend();}),s.get("/portfolio/:id",f,async(e,r)=>{new Be(e,r).retrievePortfolioDividendById();}),s.get("/user",f,async(e,r)=>{new Be(e,r).retrieveUserDividendByUserId();}),s})();var _o=s=>{let e=j(s);return z$1.preprocess(r=>({...e.parse(r)}),z$1.object({...e.innerType().shape}))},Ao=z$1.object({ids:h("Contact IDs").optional().transform(s=>s?s.split(","):[]).refine(s=>s.length===0||s.every(e=>!isNaN(Number(e))),{message:"Invalid Contact IDs"}).transform(s=>s.map(Number))}),bo=s=>{let e=j(s);return z$1.preprocess(r=>({...e.parse(r)}),z$1.object({...e.innerType().shape}))},Eo=z$1.object({ids:h("Contact IDs").optional().transform(s=>s?s.split(","):[]).refine(s=>s.length===0||s.every(e=>!isNaN(Number(e))),{message:"Invalid Newsletter IDs"}).transform(s=>s.map(Number))}),Io=z$1.object({name:h("Name"),email:De,message:h("Message")}),Do=z$1.object({email:De});var Er=class extends _{contactSortingHelper;newsletterSortingHelper;constructor(){super(),this.contactSortingHelper=new P(B),this.newsletterSortingHelper=new P(J);}async contactForm(e){try{let r=await this.db.insert(B).values(e).returning();return n.createResponse(a.HTTP_201_CREATED,"Contact form submitted successfully",r[0])}catch(r){return n.createErrorResponse(r)}}async retrieveContact(e){try{let r=this.contactSortingHelper.applySorting(e.sortingMethod,e.sortBy),t=e.from?new Date(e.from):void 0,o=e.to?new Date(e.to):void 0;o&&o.setHours(23,59,59,999);let i=[e.search?and(ilike(B.name,`%${e.search}%`),or(ilike(B.email,`%${e.search}%`)),or(ilike(B.message,`%${e.search}%`))):void 0,t?gte(B.createdAt,t):void 0,o?lte(B.createdAt,o):void 0].filter(Boolean),c=i.length>0?and(...i):void 0;if(!e.page||!e.limit)return await this.retrieveAllContact(c,e.sortingMethod,e.sortBy);let p=await this.db.select({count:count()}).from(B).where(c).then(v=>v[0].count),{pagination:d,offset:T}=new x(e.page,e.limit,p).createPagination(),y=await this.db.query.contact.findMany({where:c,limit:e.limit?e.limit:void 0,offset:e.limit?T:void 0,orderBy:r});return n.createResponse(a.HTTP_200_OK,"Contacts retrieved successfully",y,d)}catch(r){return n.createErrorResponse(r)}}async retrieveAllContact(e,r,t){try{let o=this.contactSortingHelper.applySorting(r,t),i=await this.db.query.contact.findMany({where:e,orderBy:o});return n.createResponse(a.HTTP_200_OK,"Contacts retrieved successfully",i)}catch(o){return n.createErrorResponse(o)}}async newsletterForm(e){try{if(await this.db.query.newsletter.findFirst({where:eq(J.email,e.email)}))return n.createRejectResponse(a.HTTP_409_CONFLICT,"Email already subscribed to the newsletter");let t=await this.db.insert(J).values(e).returning();return n.createResponse(a.HTTP_201_CREATED,"Newsletter subscription successful",t[0])}catch(r){return n.createErrorResponse(r)}}async retrieveNewsletter(e){try{let r=this.newsletterSortingHelper.applySorting(e.sortingMethod,e.sortBy),t=e.from?new Date(e.from):void 0,o=e.to?new Date(e.to):void 0;o&&o.setHours(23,59,59,999);let i=[e.search?ilike(J.email,`%${e.search}%`):void 0,t?gte(J.createdAt,t):void 0,o?lte(J.createdAt,o):void 0].filter(Boolean),c=i.length>0?and(...i):void 0;if(!e.page||!e.limit)return await this.retrieveAllNewsletter(c,e.sortingMethod,e.sortBy);let p=await this.db.select({count:count()}).from(J).where(c).then(v=>v[0].count),{pagination:d,offset:T}=new x(e.page,e.limit,p).createPagination(),y=await this.db.query.newsletter.findMany({where:c,limit:e.limit?e.limit:void 0,offset:e.limit?T:void 0,orderBy:r});return n.createResponse(a.HTTP_200_OK,"Newsletters retrieved successfully",y,d)}catch(r){return n.createErrorResponse(r)}}async retrieveAllNewsletter(e,r,t){try{let o=this.newsletterSortingHelper.applySorting(r,t),i=await this.db.query.newsletter.findMany({where:e,orderBy:o});return n.createResponse(a.HTTP_200_OK,"Newsletters retrieved successfully",i)}catch(o){return n.createErrorResponse(o)}}async deleteOneNewsletter(e){try{return await this.db.delete(J).where(eq(J.id,e)).returning(),n.createResponse(a.HTTP_200_OK,"Newsletter deleted successfully",!0)}catch(r){return n.createErrorResponse(r)}}async deleteOneContact(e){try{return await this.db.delete(B).where(eq(B.id,e)).returning(),n.createResponse(a.HTTP_200_OK,"Contact deleted successfully",!0)}catch(r){return n.createErrorResponse(r)}}async deleteAllOrDeleteManyContact(e){try{return e&&e.length>0?(await this.db.delete(B).where(or(...e.map(r=>eq(B.id,r)))).returning(),n.createResponse(a.HTTP_200_OK,"Contacts deleted successfully",!0)):(await this.db.delete(B).returning(),n.createResponse(a.HTTP_200_OK,"All contacts deleted successfully",!0))}catch(r){return n.createErrorResponse(r)}}async deleteAllOrDeleteManyNewsletter(e){try{return e&&e.length>0?(await this.db.delete(J).where(or(...e.map(r=>eq(J.id,r)))).returning(),n.createResponse(a.HTTP_200_OK,"Newsletters deleted successfully",!0)):(await this.db.delete(J).returning(),n.createResponse(a.HTTP_200_OK,"All newsletters deleted successfully",!0))}catch(r){return n.createErrorResponse(r)}}};var ne=class extends E{contactSortingHelper;newsletterSortingHelper;globalService;constructor(e,r){super(e,r),this.contactSortingHelper=new P(B),this.newsletterSortingHelper=new P(B),this.globalService=new Er;}async createContactForm(){try{let{body:e}=this.request,r=Io.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.globalService.contactForm(r.data);return Oe({email:r.data.email,emailSubject:"Thank you for contacting us",template:"contactThankYouEmailTemplate",data:{name:r.data.name,message:r.data.message}}),Oe({email:process.env.ADMIN_EMAIL,emailSubject:"New Contact Form Submission - Admin",template:"contactAdminEmailTemplate",data:{name:r.data.name,email:r.data.email,message:r.data.message}}),this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveContact(){try{let{query:e}=this.request,r=_o(this.contactSortingHelper).safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.globalService.retrieveContact(r.data);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async deleteOneContact(){try{let{params:e}=this.request,r=Number(e.id),t=await this.globalService.deleteOneContact(r);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async deleteManyContact(){try{let{query:e}=this.request,r=Ao.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.globalService.deleteAllOrDeleteManyContact(r.data.ids);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async createNewsletterForm(){try{let{body:e}=this.request,r=Do.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.globalService.newsletterForm(r.data);return Oe({email:r.data.email,emailSubject:"Thank you for subscribing to our newsletter",template:"newsletterThankYouEmailTemplate"}),this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveNewsletter(){try{let{query:e}=this.request,r=bo(this.newsletterSortingHelper).safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.globalService.retrieveNewsletter(r.data);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async deleteOneNewsletter(){try{let{params:e}=this.request,r=Number(e.id),t=await this.globalService.deleteOneNewsletter(r);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async deleteManyNewsletter(){try{let{query:e}=this.request,r=Eo.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.globalService.deleteAllOrDeleteManyNewsletter(r.data.ids);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}};var Co=(()=>{let s=To.Router();return s.route("/contact").get(async(e,r)=>{new ne(e,r).retrieveContact();}).post(async(e,r)=>{new ne(e,r).createContactForm();}).delete(async(e,r)=>{new ne(e,r).deleteManyContact();}),s.delete("/contact/:id",async(e,r)=>{new ne(e,r).deleteOneContact();}),s.route("/newsletter").get(async(e,r)=>{new ne(e,r).retrieveNewsletter();}).post(async(e,r)=>{new ne(e,r).createNewsletterForm();}).delete(async(e,r)=>{new ne(e,r).deleteManyNewsletter();}),s.delete("/newsletter/:id",async(e,r)=>{new ne(e,r).deleteOneNewsletter();}),s})();var Ir=class extends _{constructor(){super(),v2.config({cloud_name:process.env.CLOUDINARY_CLOUD_NAME,api_key:process.env.CLOUDINARY_API_KEY,api_secret:process.env.CLOUDINARY_API_SECRET});}managedData(e){return {fileName:e.fileName,fileSize:e.bytes,mimeType:e.format,mediaType:"IMAGE",provider:"CLOUDINARY",storageId:e.asset_id,url:e.url,secureUrl:e.secure_url,storageMetadata:JSON.stringify(e),width:e.width,height:e.height,duration:0,isPublic:true,isFeatured:false}}async saveToDatabase(e){try{if(Array.isArray(e)){let r=await this.db.insert(Q).values(e).returning();return Promise.resolve(r)}else {let r=await this.db.insert(Q).values(e).returning();return Promise.resolve(r)}}catch(r){return n.createErrorResponse(r)}}async uploadSingleImage(e,r){let t=await r.file.arrayBuffer(),o=Buffer.from(t);return new Promise((i,c)=>{v2.uploader.upload_stream({resource_type:"auto",folder:e},(p,d)=>{if(p)return c(p);if(d){let T={...d,fileName:r.fileName};return i(T)}else return c(new Error("Upload failed: No result returned"))}).end(o);})}async deleteUploadedImage(e){return new Promise(async(r,t)=>{try{let o=await v2.uploader.destroy(e);return r(o)}catch(o){t(new Error(o.message));}})}async retrieve(){try{let e=await this.db.query.mediaLibrary.findMany({orderBy:desc(Q.createdAt)});return n.createResponse(a.HTTP_200_OK,"Media retrieved successfully",e)}catch(e){return n.createErrorResponse(e)}}async uploadImage(e,r){let t=r.map(async o=>{let i=await this.uploadSingleImage(e,o);return this.managedData(i)});return Promise.all(t)}async uploadFile(e){try{let r=await this.uploadImage("Testing",e),t=await this.saveToDatabase(r);return n.createResponse(a.HTTP_200_OK,"File uploaded successfully",t)}catch(r){return n.createErrorResponse(r)}}async deleteFile(e){try{let r=await this.db.delete(Q).where(eq(Q.id,e)).returning().then(t=>t[0]);return this.deleteUploadedImage(r.storageMetadata.public_id),n.createResponse(a.HTTP_200_OK,"File deleted successfully",r)}catch(r){return n.createErrorResponse(r)}}};z$1.record(z$1.string(),z$1.union([z$1.string().optional(),z$1.instanceof(File)]));var Ye=class extends E{mediaService;acceptableTypes=["image/jpeg","image/jpg","image/png","image/gif","image/webp"];constructor(e,r){super(e,r),this.mediaService=new Ir;}async index(){try{let e=await this.mediaService.retrieve();return this.apiResponse.sendResponse(e)}catch(e){return this.apiResponse.sendResponse(e)}}async upload(){try{let e=this.request.files;if(!e||e.length===0)return this.response.status(400).json({message:"No files uploaded"});let r=e.map(c=>({file:new File([c.buffer],c.originalname,{type:c.mimetype}),fileName:c.originalname})),t=await this.mediaService.uploadFile(r),o=t.data?.map(c=>({fileName:c.fileName,success:!0,url:c.url}))||[],i=t.data.map(c=>{let p=c.mimeType,d=c.fileName.replace(/\.[^/.]+$/,"");return {fileName:d,success:!0,fileData:{name:d,size:c.fileSize,type:p}}});return this.apiResponse.successResponse(`${o.length} file${o.length!==1?"s":""} uploaded successfully`,i)}catch(e){return this.apiResponse.sendResponse(e)}}async delete(){try{let{params:e}=this.request,r=await this.mediaService.deleteFile(Number(e.id));return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}extractFilesFromFormData(e){let r=[];return Object.keys(e).forEach(t=>{if(t.startsWith("file_")){let o=t.split("_")[1],i=e[t],c=e[`fileName_${o}`];if(i!==void 0){let p=c!==""?c:i.name;r.push({file:i,fileName:p});}}}),{files:r}}validateFiles(e){let r=[],t=[],o=(Number(process.env.NEXT_PUBLIC_MAX_IMAGE_SIZE_MB)||10)*1024*1024;for(let{file:i,fileName:c}of e){if(!this.acceptableTypes.includes(i.type)){t.push({fileName:c,success:false,error:`File type not allowed: ${i.type}`});continue}if(i.size>o){t.push({fileName:c,success:false,error:`File too large: ${c} (max size: ${o/(1024*1024)}MB)`});continue}r.push({file:i,fileName:c});}return {validatedFiles:r,invalidResults:t}}};var ha=ia(),xo=(()=>{let s=To.Router();return s.route("/upload").get(async(e,r)=>{new Ye(e,r).index();}).post(ha.any(),async(e,r)=>{new Ye(e,r).upload();}),s.route("/delete/:id").delete(async(e,r)=>{new Ye(e,r).delete();}),s})();var Nr=class extends _{async completeOnBoarding(e){try{let{userId:r,accreditationStatus:t,onboardingJsonData:o,currentStep:i,complete:c}=e,p=await this.db.insert($e).values({userId:r,accreditationStatus:t,onboardingJsonData:o,currentStep:i,complete:c}).onConflictDoUpdate({target:[$e.userId],set:{complete:c,onboardingJsonData:o,accreditationStatus:t,currentStep:i}}).returning();return n.createResponse(a.HTTP_200_OK,"Onboarding completed",p[0])}catch(r){return n.createErrorResponse(r)}}async getOnBoardingStatus(e){try{let r=await this.db.query.onboardingData.findFirst({where:(t,{eq:o})=>o(t.userId,e)});return r?n.createResponse(a.HTTP_200_OK,"Onboarding found",r):n.createResponse(a.HTTP_200_OK,"Onboarding not found",{complete:!1})}catch(r){return n.createErrorResponse(r)}}};var Uo=z$1.object({complete:z$1.boolean({required_error:R.error.required.fieldIsRequired("Complete"),invalid_type_error:R.error.invalid.invalidBoolean("Complete")}),accreditationStatus:z$1.boolean({required_error:R.error.required.fieldIsRequired("Accreditation Status"),invalid_type_error:R.error.invalid.invalidBoolean("Accreditation Status")}),onboardingData:z$1.any({required_error:R.error.required.fieldIsRequired("Onboarding Data"),invalid_type_error:R.error.invalid.invalidObject("Onboarding Data")}),currentStep:b("Current Step")});var pr=class extends E{onboardingService;authService;constructor(e,r){super(e,r),this.onboardingService=new Nr,this.authService=new C;}async completeOnBoarding(){try{let{user:e}=this.request,r=await this.getReqBody(),t=Uo.safeParse(r);if(!t.success)return this.apiResponse.badResponse(t.error.errors.map(p=>p.message).join(" "));let i={userId:(await this.authService.findUserById(e?.id)).data.id,...t.data,onboardingJsonData:t.data.onboardingData||{}},c=await this.onboardingService.completeOnBoarding(i);return this.apiResponse.sendResponse(c)}catch(e){return this.apiResponse.sendResponse(e)}}async getOnBoardingStatus(){try{let{user:e}=this.request,r=await this.authService.findUserById(e?.id),t=await this.onboardingService.getOnBoardingStatus(r.data.id);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}};var Ho=(()=>{let s=To.Router();return s.route("").get(f,async(e,r)=>{new pr(e,r).getOnBoardingStatus();}).post(f,async(e,r)=>{new pr(e,r).completeOnBoarding();}),s})();var va=new Configuration({basePath:PlaidEnvironments[process.env.PLAID_ENV||"sandbox"],baseOptions:{headers:{"PLAID-CLIENT-ID":process.env.PLAID_CLIENT_ID||"","PLAID-SECRET":process.env.PLAID_SECRET||"","Plaid-Version":"2020-09-14"}}}),ga=new PlaidApi(va),je=ga;var $t=s=>{let e=j(s);return z$1.preprocess(r=>({...e.parse(r)}),z$1.object({...e.innerType().shape}))},qo=s=>{let e=j(s);return z$1.preprocess(r=>({...e.parse(r)}),z$1.object({...e.innerType().shape}))},Lo=s=>{let e=j(s);return z$1.preprocess(r=>({...e.parse(r),userIdQuery:r.userIdQuery?String(r.userIdQuery).split(","):void 0,portfolioIdQuery:r.portfolioIdQuery?String(r.portfolioIdQuery).split(","):void 0,paymentMethodQuery:r.paymentMethodQuery?String(r.paymentMethodQuery).split(","):void 0,paymentStatusQuery:r.paymentStatusQuery?String(r.paymentStatusQuery).split(","):void 0}),z$1.object({...e.innerType().shape,userIdQuery:z$1.array(h("User ID Query").refine(r=>!isNaN(Number(r)),R.error.invalid.invalidNumber("User ID Query"))).transform(r=>r.map(Number)).optional(),portfolioIdQuery:z$1.array(h("Portfolio ID Query").refine(r=>!isNaN(Number(r)),R.error.invalid.invalidNumber("Portfolio ID Query"))).transform(r=>r.map(Number)).optional(),paymentMethodQuery:z$1.array(He("Payment Method Query",tr.enumValues)).optional().refine(r=>!r||r.every(t=>tr.enumValues.includes(t)),R.error.invalid.invalidEnum("Payment Method Query",tr.enumValues)),paymentStatusQuery:z$1.array(He("Payment Status Query",sr.enumValues)).optional().refine(r=>!r||r.every(t=>sr.enumValues.includes(t)),R.error.invalid.invalidEnum("Payment Status Query",sr.enumValues))}))};var me=class extends _{sortingHelper;constructor(){super(),this.sortingHelper=new P(l);}async createPayment(e){try{let r=await this.db.insert(l).values(e).returning();return n.createResponse(a.HTTP_201_CREATED,"Payment created successfully",r[0])}catch(r){return n.createErrorResponse(r)}}async retrievePayment(e,r){try{let t=await this.db.query.payments.findFirst({where:and(eq(l.id,e),eq(l.userId,r)),columns:{metadata:!1},with:{portfolio:{columns:{id:!0,title:!0,slug:!0,shares:!0,sharePrice:!0},with:{featuredImage:{columns:{id:!0,url:!0,secureUrl:!0}}}}}});return t?n.createResponse(a.HTTP_200_OK,"Payment retrieved successfully",t):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Payment not found")}catch(t){return n.createErrorResponse(t)}}async retrieveAllPayments(e,r){try{let t=this.sortingHelper.applySorting(e.sortingMethod,e.sortBy);if(!e.page||!e.limit)return await this.retrieveAllTransactionPayments(r,e.sortingMethod,e.sortBy);let o=e.from?new Date(e.from):void 0,i=e.to?new Date(e.to):void 0;i&&i.setHours(23,59,59,999);let c=[eq(l.userId,r),e.search?or(exists(this.db.select().from(m).where(and(ilike(m.title,`%${e.search}%`),eq(l.userId,r))).leftJoin(l,eq(l.portfolioId,m.id))),ilike(l.transactionId,`%${e.search}%`)):void 0,o?gte(l.createdAt,o):void 0,i?lte(l.createdAt,i):void 0].filter(Boolean),p=c.length>0?and(...c):void 0,d=await this.db.select({count:count()}).from(l).where(p).then(N=>N[0].count),{pagination:T,offset:y}=new x(e.page,e.limit,d).createPagination(),v=await this.db.query.payments.findMany({where:p,limit:e.limit?e.limit:void 0,offset:e.limit?y:void 0,orderBy:t,columns:{metadata:!1},with:{portfolio:!0}});return n.createResponse(a.HTTP_200_OK,"Payments retrieved successfully",v,T)}catch(t){return n.createErrorResponse(t)}}async retrieveAllTransactionPayments(e,r,t){try{let o=this.sortingHelper.applySorting(r,t),i=await this.db.query.payments.findMany({where:eq(l.userId,e),orderBy:o,columns:{metadata:!1},with:{portfolio:!0}});return n.createResponse(a.HTTP_200_OK,"Payments retrieved successfully",i)}catch(o){return n.createErrorResponse(o)}}async retrieveCurrentUserBuyingPortfolios(e,r){try{let t=this.sortingHelper.applySorting(e.sortingMethod,e.sortBy);if(!e.page||!e.limit)return await this.retrieveAllCurrentUserBuyingPortfolios(r,e.sortingMethod,e.sortBy);let o=e.from?new Date(e.from):void 0,i=e.to?new Date(e.to):void 0;i&&i.setHours(23,59,59,999);let c=[eq(l.userId,r),e.search?or(exists(this.db.select().from(m).where(and(ilike(m.title,`%${e.search}%`),eq(l.userId,r))).leftJoin(l,eq(l.portfolioId,m.id))),ilike(l.transactionId,`%${e.search}%`)):void 0,o?gte(l.createdAt,o):void 0,i?lte(l.createdAt,i):void 0].filter(Boolean),p=c.length>0?and(...c):void 0,d=await this.db.select({count:count()}).from(l).where(p).then(N=>N[0].count),{pagination:T,offset:y}=new x(e.page,e.limit,d).createPagination(),v=await this.db.query.payments.findMany({where:p,limit:e.limit?e.limit:void 0,offset:e.limit?y:void 0,orderBy:t,columns:{id:!0,amount:!0,investedShares:!0,createdAt:!0},with:{portfolio:{columns:{id:!0,title:!0,slug:!0,shares:!0,sharePrice:!0},with:{featuredImage:{columns:{id:!0,url:!0,secureUrl:!0}}}}}});return n.createResponse(a.HTTP_200_OK,"Payments retrieved successfully",v,T)}catch(t){return n.createErrorResponse(t)}}async retrieveAllCurrentUserBuyingPortfolios(e,r,t){try{let o=this.sortingHelper.applySorting(r,t),i=await this.db.query.payments.findMany({where:eq(l.userId,e),orderBy:o,columns:{id:!0,amount:!0,investedShares:!0,createdAt:!0},with:{portfolio:{columns:{id:!0,title:!0,slug:!0,shares:!0,sharePrice:!0},with:{featuredImage:{columns:{id:!0,url:!0,secureUrl:!0}}}}}});return n.createResponse(a.HTTP_200_OK,"Payments retrieved successfully",i)}catch(o){return n.createErrorResponse(o)}}async retrievePortfoliosForAdminThreeMonths(){try{let e=new Date;e.setMonth(e.getMonth()-3);let r=await this.db.query.payments.findMany({columns:{id:!0,amount:!0,investedShares:!0,createdAt:!0},where:(t,{gte:o})=>o(t.createdAt,e),with:{portfolio:{columns:{id:!0,title:!0,slug:!0,shares:!0,sharePrice:!0},with:{featuredImage:{columns:{id:!0,url:!0,secureUrl:!0}}}}}});return n.createResponse(a.HTTP_200_OK,"Payments retrieved successfully",r)}catch(e){return n.createErrorResponse(e)}}async retrievePaymentsForAdmin(e){try{let r=this.sortingHelper.applySorting(e.sortingMethod,e.sortBy);if(!e.page||!e.limit)return await this.retrieveAllPaymentsForAdmin(e.sortingMethod,e.sortBy);let t=e.from?new Date(e.from):void 0,o=e.to?new Date(e.to):void 0;o&&o.setHours(23,59,59,999);let i=[e.search?or(exists(this.db.select().from(m).where(ilike(m.title,`%${e.search}%`)).leftJoin(l,eq(l.portfolioId,m.id))),ilike(l.transactionId,`%${e.search}%`),exists(this.db.select().from(u).where(ilike(u.name,`%${e.search}%`)).leftJoin(u,eq(l.userId,u.id)))):void 0,e.userIdQuery?inArray(l.userId,e.userIdQuery):void 0,e.portfolioIdQuery?inArray(l.portfolioId,e.portfolioIdQuery):void 0,e.paymentMethodQuery?inArray(l.type,e.paymentMethodQuery):void 0,e.paymentStatusQuery?inArray(l.status,e.paymentStatusQuery):void 0,t?gte(l.createdAt,t):void 0,o?lte(l.createdAt,o):void 0].filter(Boolean),c=i.length>0?and(...i):void 0,p=await this.db.select({count:count()}).from(l).where(c).then(v=>v[0].count),{pagination:d,offset:T}=new x(e.page,e.limit,p).createPagination(),y=await this.db.query.payments.findMany({where:c,limit:e.limit?e.limit:void 0,offset:e.limit?T:void 0,orderBy:r,with:{user:{columns:{id:!0,name:!0,email:!0,username:!0}},portfolio:{columns:{id:!0,title:!0,slug:!0,shares:!0,sharePrice:!0},with:{featuredImage:{columns:{id:!0,url:!0,secureUrl:!0}}}}}});return n.createResponse(a.HTTP_200_OK,"Payments retrieved successfully",y,d)}catch(r){return n.createErrorResponse(r)}}async retrieveAllPaymentsForAdmin(e,r){try{let t=this.sortingHelper.applySorting(e,r),o=await this.db.query.payments.findMany({orderBy:t,with:{user:{columns:{id:!0,name:!0,email:!0,username:!0}},portfolio:{columns:{id:!0,title:!0,slug:!0,shares:!0,sharePrice:!0},with:{featuredImage:{columns:{id:!0,url:!0,secureUrl:!0}}}}}});return n.createResponse(a.HTTP_200_OK,"Payments retrieved successfully",o)}catch(t){return n.createErrorResponse(t)}}async retrieveCapital(e){try{let r=this.sortingHelper.applySorting(e.sortingMethod,e.sortBy);if(!e.page||!e.limit)return await this.retrieveAllCapital(e.sortingMethod,e.sortBy);let t=e.from?new Date(e.from):void 0,o=e.to?new Date(e.to):void 0;o&&o.setHours(23,59,59,999);let i=[e.search?or(exists(this.db.select().from(m).where(and(ilike(m.title,`%${e.search}%`))).leftJoin(l,eq(l.portfolioId,m.id))),ilike(l.transactionId,`%${e.search}%`)):void 0,t?gte(l.createdAt,t):void 0,o?lte(l.createdAt,o):void 0].filter(Boolean),c=i.length>0?and(...i):void 0,p=await this.db.select({count:count()}).from(l).where(c).then(N=>N[0].count),{pagination:d,offset:T}=new x(e.page,e.limit,p).createPagination(),v=(await this.db.query.payments.findMany({where:c,limit:e.limit?e.limit:void 0,offset:e.limit?T:void 0,orderBy:r,columns:{id:!0,amount:!0,investedShares:!0,createdAt:!0},with:{user:{columns:{name:!0}},portfolio:{columns:{id:!0,title:!0,slug:!0,shares:!0,sharePrice:!0},with:{featuredImage:{columns:{id:!0,url:!0,secureUrl:!0}}}}}})).map(N=>{let A=N.portfolio;return {investorName:N.user?.name||"Unknown",totalShareOwned:N.investedShares,percentageOwnership:A?N.investedShares/A.shares*100:0}});return n.createResponse(a.HTTP_200_OK,"Payments retrieved successfully",v,d)}catch(r){return n.createErrorResponse(r)}}async retrieveAllCapital(e,r){try{let t=this.sortingHelper.applySorting(e,r),i=(await this.db.query.payments.findMany({orderBy:t,columns:{id:!0,amount:!0,investedShares:!0,createdAt:!0},with:{user:{columns:{name:!0}},portfolio:{columns:{id:!0,title:!0,slug:!0,shares:!0,sharePrice:!0},with:{featuredImage:{columns:{id:!0,url:!0,secureUrl:!0}}}}}})).map(c=>{let p=c.portfolio;return {investorName:c.user?.name||"Unknown",totalShareOwned:c.investedShares,percentageOwnership:p?c.investedShares/p.shares*100:0}});return n.createResponse(a.HTTP_200_OK,"Payments retrieved successfully",i)}catch(t){return n.createErrorResponse(t)}}async updatePayment(e,r){try{let t=await this.db.update(l).set(r).where(eq(l.id,e)).returning();return t.length===0?n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Payment not found"):n.createResponse(a.HTTP_200_OK,"Payment updated successfully",t[0])}catch(t){return n.createErrorResponse(t)}}async userNumberOfSharesBought(e){try{let r=await this.db.select({totalShares:count()}).from(l).where(and(eq(l.userId,e),eq(l.status,"COMPLETED"))).then(t=>t[0].totalShares);return n.createResponse(a.HTTP_200_OK,"Total shares bought retrieved successfully",r)}catch(r){return n.createErrorResponse(r)}}async userPortfolioValue(e){try{let r=await this.db.select({totalValue:sum(l.amount)}).from(l).where(and(eq(l.userId,e),eq(l.status,"COMPLETED"))).then(t=>Number(t[0].totalValue)||0);return n.createResponse(a.HTTP_200_OK,"Total portfolio value retrieved successfully",r)}catch(r){return n.createErrorResponse(r)}}};var Mo=["IDENTITY_VERIFICATION","AUTH"],Bo=s=>{let e=j(s);return z$1.preprocess(r=>({...e.parse(r)}),z$1.object({...e.innerType().shape}))};z$1.object({ids:h("PlaidBank IDs").optional().transform(s=>s?s.split(","):[]).refine(s=>s.length===0||s.every(e=>!isNaN(Number(e))),R.error.invalid.invalidNumber("PlaidBank IDs")).transform(s=>s.map(Number))});var Fo=z$1.object({product:z$1.enum(Mo,{message:`Products has to be one of these ${Mo.join(" ")}`})}),jo=z$1.object({bankName:h("Bank name"),bankType:h("Bank type"),accountId:h("Account ID"),publicToken:h("Public token"),bankData:z$1.any()});var Je=class extends _{authService;sortingHelper;paymentService;constructor(){super(),this.authService=new C,this.sortingHelper=new P(g),this.paymentService=new me;}async generateLinkToken(e,r){try{let t=await this.authService.findUserById(e),o={user:{client_user_id:String(t.data?.id),email_address:t.data?.email||""},products:[r],client_name:process.env.PLAID_CLIENT_NAME,language:"en",country_codes:[CountryCode.Us]};r===Products.IdentityVerification&&(o.identity_verification={template_id:process.env.PLAID_TEMPLATE_ID});let i=await je.linkTokenCreate(o);return n.createResponse(a.HTTP_200_OK,"Link token generated successfully",i.data.link_token)}catch(t){return n.createErrorResponse(t)}}async exchangePublicToken(e){try{let r=await je.itemPublicTokenExchange({public_token:e});return n.createResponse(a.HTTP_200_OK,"Public token exchanged successfully",r.data.access_token)}catch(r){return n.createErrorResponse(r)}}async retrieveUserIDVStatus(e){try{let r=await this.db.query.plaidProfile.findFirst({where:eq(be.userId,e)});return r?.idv_status?r.idv_status==="FAILED"?n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"IDV status is failed"):r.idv_status==="PENDING"?n.createResponse(a.HTTP_208_ALREADY_REPORTED,"IDV status is pending",!0):n.createResponse(a.HTTP_200_OK,"IDV status found",r.idv_status):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"No IDV status found")}catch(r){return n.createErrorResponse(r)}}async updateUserIDVStatus(e,r){try{let o=(await je.identityVerificationGet({identity_verification_id:r})).data,i=o.status==="success",c=await this.db.insert(be).values({userId:e,idv_status:o.status,is_verified:i,most_recent_idv_session:o.id,plaidProfileData:o}).onConflictDoUpdate({target:[be.userId],set:{idv_status:o.status,is_verified:i,most_recent_idv_session:o.id,plaidProfileData:o}}).returning();return n.createResponse(a.HTTP_200_OK,"IDV status updated",c[0])}catch(t){return n.createErrorResponse(t)}}async addBank(e){try{let r=await this.exchangePublicToken(e.publicToken),t={...e,accessToken:r.data},o=await this.db.insert(g).values(t).onConflictDoNothing({target:[g.accountId]}).returning(),i={id:o[0].id,bankName:o[0].bankName,bankType:o[0].bankType,accountId:o[0].accountId.slice(-4).padStart(o[0].accountId.length,"*"),createdAt:o[0].createdAt};return n.createResponse(a.HTTP_200_OK,"Bank added successfully",i)}catch(r){return n.createErrorResponse(r)}}async retrieveBankAccounts(e,r){try{let t=this.sortingHelper.applySorting(r.sortingMethod,r.sortBy);if(!r.page||!r.limit)return await this.retrieveBankAllAccounts(e,r.sortingMethod,r.sortBy);let o=r.from?new Date(r.from):void 0,i=r.to?new Date(r.to):void 0;i&&i.setHours(23,59,59,999);let c=[r.search?ilike(g.bankName,`%${r.search}%`):void 0,o?gte(g.createdAt,o):void 0,i?lte(g.createdAt,i):void 0,eq(g.userId,e)].filter(Boolean),p=c.length>0?and(...c):void 0,d=await this.db.select({count:count()}).from(g).where(p).then(A=>A[0].count),{pagination:T,offset:y}=new x(r.page,r.limit,d).createPagination(),N=(await this.db.query.plaidBanks.findMany({orderBy:t,limit:r.limit,offset:y,where:p})).map(A=>({id:A.id,bankName:A.bankName,bankType:A.bankType,accountId:A.accountId.slice(-4).padStart(A.accountId.length,"*"),createdAt:A.createdAt}));return n.createResponse(a.HTTP_200_OK,"Bank account retrieved successfully",N,T)}catch(t){return n.createErrorResponse(t)}}async retrieveBankAllAccounts(e,r,t){try{let o=this.sortingHelper.applySorting(r,t),c=(await this.db.query.plaidBanks.findMany({orderBy:o,where:eq(g.userId,e)})).map(p=>({id:p.id,bankName:p.bankName,bankType:p.bankType,accountId:p.accountId.slice(-4).padStart(p.accountId.length,"*"),createdAt:p.createdAt}));return n.createResponse(a.HTTP_200_OK,"Bank account retrieved successfully",c)}catch(o){return n.createErrorResponse(o)}}async retrieveBankAccount(e,r){try{let t=await this.db.query.plaidBanks.findFirst({where:and(eq(g.userId,e),eq(g.accountId,r))});return t?n.createResponse(a.HTTP_200_OK,"Bank account retrieved successfully",t):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Bank account not found")}catch(t){return n.createErrorResponse(t)}}async retrieveBankAccountById(e,r){try{let t=await this.db.query.plaidBanks.findFirst({where:and(eq(g.userId,e),eq(g.id,r))});return t?n.createResponse(a.HTTP_200_OK,"Bank account retrieved successfully",t):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Bank account not found")}catch(t){return n.createErrorResponse(t)}}async removeBank(e,r){try{let t=await this.db.query.plaidBanks.findFirst({where:and(eq(g.userId,e),eq(g.id,r))});return t?(await this.db.delete(g).where(eq(g.id,t.id)),n.createResponse(a.HTTP_200_OK,"Bank account removed successfully",t)):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Bank account not found")}catch(t){return n.createErrorResponse(t)}}async addPlaidTransaction(e){try{let r=await this.db.insert(L).values(e).returning(),t=await this.paymentService.createPayment({userId:e.userId,amount:Number(e.amount),currency:e.isoCurrencyCode,transactionId:e.transactionId,fee:null,netAmount:Number(e.amount),description:"Payment for portfolio purchase",status:"COMPLETED",metadata:e.transactionDetails,portfolioId:e.portfolioId,type:"PLAID",investedShares:e.share,errorMessage:null});return {...t,data:{...t.data,plaidTransactionId:r[0].id}}}catch(r){return n.createErrorResponse(r)}}async retrieveCurrentUserTransactions(e){try{let r=await this.db.query.plaidTransactions.findMany({where:eq(L.userId,e),orderBy:desc(L.id)});return n.createResponse(a.HTTP_200_OK,"Transactions retrieved successfully",r)}catch(r){return n.createErrorResponse(r)}}async retrieveCurrentUserBuyingPortfolios(e){try{let t=(await this.db.query.plaidTransactions.findMany({where:eq(L.userId,e),orderBy:desc(L.id),with:{portfolio:{columns:{id:!0,title:!0,slug:!0,sharePrice:!0},with:{featuredImage:{columns:{id:!0,url:!0,secureUrl:!0}}}}}})).map(o=>{let i=o.portfolio;return i?{portfolio:{id:i.id,title:i.title,slug:i.slug,image:o.portfolio?.featuredImage},investment:i.title,shares:o.share||0,amount:(o.share||0)*(i.sharePrice||0)}:n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Investment not found")}).filter(Boolean);return n.createResponse(a.HTTP_200_OK,"Data retrieved successfully",t)}catch(r){return n.createErrorResponse(r)}}};var Xe=class extends _{portfolioService;plaidService;authService;constructor(){super(),this.portfolioService=new Z,this.plaidService=new Je,this.authService=new C;}async cart(e,r,t){try{let o=await this.portfolioCart(e,r,t);return n.createResponse(a.HTTP_200_OK,"Cart created successfully",o.data)}catch(o){return n.createErrorResponse(o)}}async updateCartItemQuantity(e,r,t){try{let o=await this.checkUserCartExistence(e);if(o.data.portfolio.shares<o.data.shares+r)return n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Shares cannot be less than the current shares in the cart");if(t==="INCREMENT"?r=o.data.shares+r:t==="DECREMENT"&&(r=o.data.shares-r),r<=0)return n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Shares cannot be less than or equal to zero");let c={...await this.db.update(D).set({shares:r}).returning().where(eq(D.userId,e)).then(p=>p[0]),portfolio:o.data.portfolio};return n.createResponse(a.HTTP_200_OK,"Cart updated successfully",c)}catch(o){return n.createErrorResponse(o)}}async checkUserCartExistence(e){try{let r=await this.db.query.cart.findFirst({where:eq(D.userId,e),with:{portfolio:{with:{featuredImage:{columns:{id:!0,secureUrl:!0,url:!0,fileName:!0}}}}}});return r?n.createResponse(a.HTTP_200_OK,"Cart retrieved successfully",r):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Cart not found")}catch(r){return n.createErrorResponse(r)}}async removeCart(e){try{return await this.db.delete(D).where(eq(D.userId,e)),n.createResponse(a.HTTP_200_OK,"Cart removed successfully",!0)}catch(r){return n.createErrorResponse(r)}}async addBankAccountToCart(e,r){try{let t=await this.plaidService.retrieveBankAccountById(e,r),{bankData:o,...i}=t.data;return await this.db.update(D).set({bankAccountId:t.data.id,bankAccountDetails:i}).where(eq(D.userId,e)).returning(),n.createResponse(a.HTTP_200_OK,"Bank account added to cart successfully",!0)}catch(t){return n.createErrorResponse(t)}}async retrieveCart(e){try{let r=await this.db.query.cart.findFirst({where:eq(D.userId,e),with:{portfolio:{with:{featuredImage:{columns:{id:!0,secureUrl:!0,url:!0}}}}}});if(!r)return n.createRejectResponse(a.HTTP_204_NO_DATA,"Cart not found");let{bankAccountDetails:t,...o}=r,i={...o,bankName:r?.bankAccountDetails?.bankName,bankAccountNumber:r?.bankAccountDetails?.accountId.slice(-4).padStart(r?.bankAccountDetails?.accountId.length,"*")};return n.createResponse(a.HTTP_200_OK,"Cart retrieved successfully",i)}catch(r){return n.createErrorResponse(r)}}async retrieveCartByCartId(e){try{let r=await this.db.query.cart.findFirst({where:eq(D.id,e),with:{portfolio:!0}});return r?n.createResponse(a.HTTP_200_OK,"Cart retrieved successfully",r):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Cart not found")}catch(r){return n.createErrorResponse(r)}}async portfolioCart(e,r,t){try{await this.portfolioService.retrievePortfolioById(r);let o=await this.db.insert(D).values({userId:e,portfolioId:r,shares:t}).onConflictDoUpdate({target:[D.userId],set:{portfolioId:r,shares:t}}).returning();return n.createResponse(a.HTTP_200_OK,"Cart created successfully",o[0])}catch(o){return n.createErrorResponse(o)}}async checkout(e,r){try{let t=await this.portfolioCheckout(e,r);return n.createResponse(a.HTTP_200_OK,"Checkout successful",t.data)}catch(t){return n.createErrorResponse(t)}}async portfolioCheckout(e,r){try{let t=await this.authService.findUserById(e),o=await this.db.query.cart.findFirst({where:eq(D.userId,e)});if(!o)return n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Cart not found");let i=await this.portfolioService.retrievePortfolioById(o.portfolioId),c=i.data?.sharePrice*o?.shares,p=String(c.toFixed(2)),d=this.createTransferIntent(t.data,i.data,o,p),T=await this.db.query.plaidBanks.findFirst({where:and(eq(g.userId,e),eq(g.id,r))});T&&(d.account_id=T.accountId);let y=await this.createPlaidTransferIntent(d),v=await this.generateLinkToken(e,t.data?.name,y.data,T?.accessToken);return n.createResponse(a.HTTP_200_OK,"Checkout successful",v.data)}catch(t){return console.log(t),n.createErrorResponse(t)}}async generateLinkToken(e,r,t,o){try{let i={user:{client_user_id:String(e),legal_name:r},products:[Products.Transfer],transfer:{intent_id:t},client_name:process.env.PLAID_CLIENT_NAME,language:"en",country_codes:[CountryCode.Us]};o&&(i.access_token=o);let p={linkToken:(await je.linkTokenCreate(i)).data.link_token,intentId:t};return n.createResponse(a.HTTP_200_OK,"Link token generated successfully",p)}catch(i){return n.createErrorResponse(i)}}async completeOrder(e,r){try{let o=(await je.transferIntentGet({transfer_intent_id:r})).data.transfer_intent;return o.metadata?.portfolioId?this.portfolioCompleteOrder(e,o):n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Order failed")}catch(t){return n.createErrorResponse(t)}}async portfolioCompleteOrder(e,r){try{await this.authService.findUserById(e);let t=await this.db.query.cart.findFirst({where:eq(D.userId,e)});if(!t)return n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Cart not found");let o=await this.portfolioService.retrievePortfolioById(t.portfolioId),i=await this.createPlaidTransaction(r,e,t,t.portfolioId),c=await this.createCheckout(e,t,o.data,{plaidTransactionId:i.data.plaidTransactionId});return await this.cleanupOrder(e,t.portfolioId,t.shares),n.createResponse(a.HTTP_200_OK,"Order completed successfully",i.data)}catch(t){return n.createErrorResponse(t)}}createTransferIntent(e,r,t,o){return {mode:TransferIntentCreateMode.Payment,user:{legal_name:e.name,email_address:e.email},amount:o,description:"Investment",ach_class:ACHClass.Web,iso_currency_code:"USD",network:TransferIntentCreateNetwork.SameDayAch,metadata:{portfolioId:String(r.id),portfolioName:r.title,portfolioShares:String(t.shares),portfolioSharePrice:String(r.sharePrice),portfolioTotalInvestment:o}}}async createPlaidTransferIntent(e){try{let r=await je.transferIntentCreate(e);return r.data.transfer_intent.id?n.createResponse(a.HTTP_200_OK,"Transfer intent created successfully",r.data.transfer_intent.id):n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Order failed")}catch(r){return n.createErrorResponse(r)}}async createPlaidTransaction(e,r,t,o){return await this.plaidService.addPlaidTransaction({transactionId:e.id,userId:r,achClass:e.ach_class,amount:e.amount,share:t.shares,authorizationDecision:e.authorization_decision,description:e.description,authorizationDecisionRationale:e.authorization_decision_rationale,failureReason:String(e.failure_reason),fundingAccountId:e.funding_account_id,guaranteeDecision:e.guarantee_decision,isoCurrencyCode:e.iso_currency_code,mode:e.mode,network:e.network,guaranteeDecisionRationale:String(e.guarantee_decision_rationale),originationAccountId:e.origination_account_id,status:e.status,transferId:e.transfer_id,metadata:e.metadata,portfolioId:o,transactionDetails:e})}async createCheckout(e,r,t,o){try{let i=await this.db.insert(V).values({userId:e,portfolioId:r.portfolioId,portfolioDetails:t,bankAccountId:r.bankAccountId,bankAccountDetails:r.bankAccountDetails,shares:r.shares,plaidTransactionId:o.plaidTransactionId,paypalTransactionId:o.paypalTransactionId}).returning();return n.createResponse(a.HTTP_200_OK,"Checkout successful",i[0])}catch(i){return n.createErrorResponse(i)}}async cleanupOrder(e,r,t){await this.portfolioService.deductInvestmentAmountForPortfolio(e,r,t),await this.db.delete(D).where(eq(D.userId,e));}async completeOrderUsingPaypal(e,r,t,o){try{return await this.createCheckout(e,r,t,{paypalTransactionId:o}),await this.cleanupOrder(e,r.portfolioId,r.shares),n.createResponse(a.HTTP_200_OK,"Order completed successfully",!0)}catch(i){return n.createErrorResponse(i)}}};var $o=z$1.object({portfolioId:b("Portfolio ID"),shares:b("Shares")}),Vo=z$1.object({shares:b("Shares"),updateStatus:He("Update status",["INCREMENT","DECREMENT"])}),Qo=z$1.object({accountId:b("Account ID")}),Wo=z$1.object({intentId:h("Intent ID")});var ae=class extends E{orderService;authService;constructor(e,r){super(e,r),this.orderService=new Xe,this.authService=new C;}async cart(){try{let e=this.request.user?.id,{body:r}=this.request,t=$o.safeParse(r);if(!t.success)return this.apiResponse.badResponse(t.error.errors.map(i=>i.message).join(`
`));let o=await this.orderService.cart(e,t.data.portfolioId,t.data.shares);return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async removeCart(){try{let e=this.request.user?.id,r=await this.orderService.removeCart(e);return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}async addBankAccountToCart(){try{let e=this.request.user?.id,{body:r}=this.request;if(!r.accountId)return this.apiResponse.badResponse("Account ID is required");if(typeof r.accountId!="number")return this.apiResponse.badResponse("Account ID must be a number");let t=await this.orderService.addBankAccountToCart(e,r.accountId);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveCart(){try{let e=this.request.user?.id,r=await this.orderService.retrieveCart(e);return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}async updateCartItemQuantity(){try{let{body:e}=this.request,r=Vo.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(i=>i.message).join(`
`));let t=Number(this.request.user?.id),o=await this.orderService.updateCartItemQuantity(t,r.data.shares,r.data.updateStatus);return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async checkout(){try{let e=this.request.user?.id,{body:r}=this.request,t=Qo.safeParse(r);if(!t.success)return this.apiResponse.badResponse(t.error.errors.map(i=>i.message).join(`
`));let o=await this.orderService.checkout(e,t.data.accountId);return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async completeOrder(){try{let e=this.request.user?.id,{body:r}=this.request,t=Wo.safeParse(r);if(!t.success)return this.apiResponse.badResponse(t.error.errors.map(i=>i.message).join(`
`));let o=await this.orderService.completeOrder(e,t.data.intentId);return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async webhookCompleteOrder(){try{let{body:e}=this.request;return console.log("Webhook body",e),this.apiResponse.successResponse("Webhook received")}catch(e){return this.apiResponse.sendResponse(e)}}};var Yo=(()=>{let s=To.Router();return s.route("/cart").get(f,async(e,r)=>{new ae(e,r).retrieveCart();}).post(f,async(e,r)=>{new ae(e,r).cart();}).delete(f,async(e,r)=>{new ae(e,r).removeCart();}),s.put("/cart/update",f,async(e,r)=>{new ae(e,r).updateCartItemQuantity();}),s.post("/cart/bank",f,async(e,r)=>{new ae(e,r).addBankAccountToCart();}),s.post("/checkout",f,async(e,r)=>{new ae(e,r).checkout();}),s.post("/complete",f,async(e,r)=>{new ae(e,r).completeOrder();}),s})(),Go=(()=>{let s=To.Router();return s.post("/complete",async(e,r)=>{new ae(e,r).webhookCompleteOrder();}),s})();var _e=class extends E{sortingHelper;paymentService;authService;constructor(e,r){super(e,r),this.sortingHelper=new P(l),this.paymentService=new me,this.authService=new C;}async retrievePayment(){try{let{user:e}=this.request,r=this.request.params.id,t=await this.paymentService.retrievePayment(Number(r),Number(e?.id));return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveAllPayments(){try{let{user:e}=this.request,{query:r}=this.request,t=qo(this.sortingHelper).safeParse(r);if(!t.success){let i=t.error.issues.map(c=>{let p=c.path.join(".");return `${p.charAt(0).toUpperCase()+p.slice(1)} is required.`});return this.apiResponse.badResponse(i.join(" "))}let o=await this.paymentService.retrieveAllPayments(t.data,Number(e?.id));return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async retrievePortfolios(){try{let e=this.request.user?.id,{query:r}=this.request,t=$t(this.sortingHelper).safeParse(r);if(!t.success){let i=t.error.issues.map(c=>{let p=c.path.join(".");return `${p.charAt(0).toUpperCase()+p.slice(1)} is required.`});return this.apiResponse.badResponse(i.join(" "))}let o=await this.paymentService.retrieveCurrentUserBuyingPortfolios(t.data,e);return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async retrievePortfoliosForAdmin(){try{let e=await this.paymentService.retrievePortfoliosForAdminThreeMonths();return this.apiResponse.sendResponse(e)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveAllPaymentsForAdmin(){try{let{query:e}=this.request,r=Lo(this.sortingHelper).safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.paymentService.retrievePaymentsForAdmin(r.data);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveCapital(){try{let{query:e}=this.request,r=$t(this.sortingHelper).safeParse(e);if(!r.success){let o=r.error.issues.map(i=>{let c=i.path.join(".");return `${c.charAt(0).toUpperCase()+c.slice(1)} is required.`});return this.apiResponse.badResponse(o.join(" "))}let t=await this.paymentService.retrieveCapital(r.data);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}};var Jo=(()=>{let s=To.Router();return s.get("/transactions",f,async(e,r)=>{await new _e(e,r).retrieveAllPayments();}),s.get("/transactions/:id",f,async(e,r)=>{await new _e(e,r).retrievePayment();}),s.get("/portfolios",f,async(e,r)=>{await new _e(e,r).retrievePortfolios();}),s.get("/admin/portfolios",f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{await new _e(e,r).retrievePortfoliosForAdmin();}),s.get("/capital",f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{await new _e(e,r).retrieveCapital();}),s.get("/admin/transactions",f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{await new _e(e,r).retrieveAllPaymentsForAdmin();}),s})();var Cr=class extends _{orderService;portfolioService;paymentService;constructor(){super(),this.orderService=new Xe,this.portfolioService=new Z,this.paymentService=new me;}async generatePaypalToken(){try{let e=process.env.PAYPAL_API_URL+"/v1/oauth2/token",r=await Vt({url:e,method:"post",data:"grant_type=client_credentials",auth:{username:process.env.PAYPAL_CLIENT_ID,password:process.env.PAYPAL_CLIENT_SECRET}});return n.createResponse(a.HTTP_200_OK,"Token generated successfully",r.data)}catch(e){return n.createErrorResponse(e)}}async createOrder(e){try{let r=await this.orderService.retrieveCart(e),t=await this.portfolioService.retrievePortfolioById(r.data.portfolioId),o=await this.generatePaypalToken(),c=(r.data.shares*t.data.sharePrice).toFixed(2);return await Vt({url:process.env.PAYPAL_API_URL+"/v2/checkout/orders",method:"post",headers:{"Content-Type":"application/json",Authorization:"Bearer "+o.data.access_token},data:JSON.stringify({intent:"CAPTURE",purchase_units:[{items:[{name:t.data.title,description:t.data.title,quantity:r.data.shares,unit_amount:{currency_code:"USD",value:t.data.sharePrice.toFixed(2)}}],amount:{currency_code:"USD",value:c,breakdown:{item_total:{currency_code:"USD",value:c}}}}],application_context:{return_url:process.env.API_URL+"/paypal/order/complete?cartId="+r.data.id,cancel_url:process.env.API_URL+"/paypal/order/cancel",shipping_preference:"NO_SHIPPING",user_action:"PAY_NOW",brand_name:"Homevest.io"}})}).then(p=>{let d=p.data;return n.createResponse(a.HTTP_200_OK,"Order created successfully",d.id)}).catch(p=>(console.error("Error creating PayPal order:",p.response.data),n.createRejectResponse(a.HTTP_500_INTERNAL_SERVER_ERROR,"Error creating PayPal order")))}catch(r){return n.createErrorResponse(r)}}async capturePayment(e,r,t){try{let o=await this.generatePaypalToken(),c=(await Vt({url:process.env.PAYPAL_API_URL+"/v2/checkout/orders/"+r+"/capture",method:"post",headers:{"Content-Type":"application/json",Authorization:"Bearer "+o.data.access_token}})).data,p={userId:e,payerId:c.payer.payer_id,portfolioId:t,currency:c.purchase_units[0].payments.captures[0].amount.currency_code,grossAmount:c.purchase_units[0].payments.captures[0].seller_receivable_breakdown.gross_amount.value,transactionId:c.id,netAmount:c.purchase_units[0].payments.captures[0].seller_receivable_breakdown.net_amount.value,paypalFee:c.purchase_units[0].payments.captures[0].seller_receivable_breakdown.paypal_fee.value,transactionDetails:JSON.stringify(c)},d=await this.createTransaction(p);return n.createResponse(a.HTTP_200_OK,"Payment captured successfully",d.data)}catch(o){return n.createErrorResponse(o)}}async retrievePaypalOrderId(e){try{let r=await this.db.query.paypalTransactions.findFirst({where:eq(W.id,e)});return r?n.createResponse(a.HTTP_200_OK,"Transaction retrieved successfully",r):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"Transaction not found")}catch(r){return n.createErrorResponse(r)}}async createTransaction(e){try{let r=await this.db.insert(W).values(e).returning(),t=await this.portfolioService.retrievePortfolioById(e.portfolioId),o=Number(e.grossAmount)/t.data.sharePrice,i=await this.paymentService.createPayment({userId:e.userId,amount:Number(e.grossAmount),currency:e.currency,transactionId:e.transactionId,fee:Number(e.paypalFee),netAmount:Number(e.netAmount),description:"Payment for portfolio purchase",status:"COMPLETED",metadata:e.transactionDetails,portfolioId:e.portfolioId,type:"PAYPAL",investedShares:o,errorMessage:null});return n.createResponse(a.HTTP_200_OK,"Transaction created successfully",{...r[0],paymentId:i.data.id})}catch(r){return n.createErrorResponse(r)}}};var ur=class extends E{paypalService;portfolioService;authService;constructor(e,r){super(e,r),this.paypalService=new Cr,this.portfolioService=new Z,this.authService=new C;}async createOrder(){try{let e=this.request.user?.id,r=await this.paypalService.createOrder(Number(e));return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}async completeOrder(){try{let{body:e}=this.request;if(!e.orderId||!e.cartId)return this.apiResponse.badResponse("Missing orderId or cartId");let{orderId:r,cartId:t}=e,o=await this.paypalService.orderService.retrieveCartByCartId(Number(t));await this.authService.findUserById(o.data.userId);let i=await this.portfolioService.retrievePortfolioById(o.data.portfolioId),c=await this.paypalService.capturePayment(o.data.userId,r,o.data.portfolioId);return await this.paypalService.orderService.completeOrderUsingPaypal(o.data.userId,o.data,i.data,c.data.id),this.apiResponse.sendResponse(c)}catch(e){return this.apiResponse.sendResponse(e)}}};var Xo=(()=>{let s=To.Router();return s.post("/order",f,async(e,r)=>{new ur(e,r).createOrder();}),s.post("/order/complete",async(e,r)=>{new ur(e,r).completeOrder();}),s})();var ce=class extends E{sortingHelper;plaidService;constructor(e,r){super(e,r),this.sortingHelper=new P(g),this.plaidService=new Je;}async generateLinkToken(){try{let{body:e}=this.request,r=this.request.user?.id,t=Fo.safeParse(e);if(!t.success)return this.apiResponse.badResponse(t.error.errors.map(c=>c.message).join(`
`));let o=t.data.product==="IDENTITY_VERIFICATION"?Products.IdentityVerification:Products.Auth,i=await this.plaidService.generateLinkToken(r,o);return this.apiResponse.sendResponse(i)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveUserIDVStatus(){try{let e=this.request.user?.id,r=await this.plaidService.retrieveUserIDVStatus(e);return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}async updateUserIDVStatus(){try{let e=this.request.user?.id,{body:r}=this.request;if(!r.idvSession)return this.apiResponse.badResponse("IDV session is required");let t=await this.plaidService.updateUserIDVStatus(e,r.idvSession);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async getPlaidBanks(){try{let e=this.request.user?.id,{query:r}=this.request,t=Bo(this.sortingHelper).safeParse(r);if(!t.success)return this.apiResponse.badResponse(t.error.errors.map(i=>i.message).join(" "));let o=await this.plaidService.retrieveBankAccounts(e,t.data);return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async addBank(){try{let e=this.request.user?.id,{body:r}=this.request,t=jo.safeParse(r);if(!t.success)return this.apiResponse.badResponse(t.error.errors.map(c=>c.message).join(`
`));let o={userId:e,...t.data},i=await this.plaidService.addBank(o);return this.apiResponse.sendResponse(i)}catch(e){return this.apiResponse.sendResponse(e)}}async removeBank(){try{let e=this.request.user?.id,{body:r}=this.request;if(!r.accountId)return this.apiResponse.badResponse("Account ID is required");if(isNaN(r.accountId))return this.apiResponse.badResponse("Account ID must be a number");let t=await this.plaidService.removeBank(e,r.accountId);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async getPlaidTransactionsByUserId(){try{let e=this.request.user?.id,r=await this.plaidService.retrieveCurrentUserTransactions(e);return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}async getPortfolios(){try{let e=this.request.user?.id,r=await this.plaidService.retrieveCurrentUserBuyingPortfolios(e);return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}};var en=(()=>{let s=To.Router();return s.post("/link-token",f,async(e,r)=>{new ce(e,r).generateLinkToken();}),s.route("/idv").get(f,async(e,r)=>{new ce(e,r).retrieveUserIDVStatus();}).post(f,async(e,r)=>{new ce(e,r).updateUserIDVStatus();}),s.get("/bank/list",f,async(e,r)=>{new ce(e,r).getPlaidBanks();}),s.post("/bank/add",f,async(e,r)=>{new ce(e,r).addBank();}),s.delete("/bank/remove",f,async(e,r)=>{new ce(e,r).removeBank();}),s.get("/transactions",f,async(e,r)=>{new ce(e,r).getPlaidTransactionsByUserId();}),s.get("/portfolios",f,async(e,r)=>{new ce(e,r).getPortfolios();}),s})();var fe=class extends E{sortingHelper;portfolioService;constructor(e,r){super(e,r),this.sortingHelper=new P(m),this.portfolioService=new Z;}async create(){try{let{body:e,user:r}=this.request;console.log("Portfolio Create Check:",e);let t=Lt.safeParse(e);if(!t.success)return this.apiResponse.badResponse(t.error.errors.map(p=>p.message).join(" "));let o=Number(r?.id);t.data.slug&&(t.data.slug=(await this.portfolioService.validateSlug(t.data.slug)).data);let i={...t.data,remainingShares:t.data.shares,remainingInvestment:t.data.shares*t.data.sharePrice,galleryImages:t.data.galleryImages||[],authorId:o},c=await this.portfolioService.createPortfolio(i);return this.apiResponse.sendResponse(c)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieve(){try{let{identifier:e}=this.request.params;if(!isNaN(Number(e))){let t=await this.portfolioService.retrievePortfolioById(Number(e));return this.apiResponse.sendResponse(t)}else {let t=await this.portfolioService.retrievePortfolioBySlug(e);return this.apiResponse.sendResponse(t)}}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveAll(){try{let{query:e}=this.request,r=uo(this.sortingHelper).safeParse(e);if(!r.success){let o=r.error.issues.map(i=>{let c=i.path.join(".");return `${c.charAt(0).toUpperCase()+c.slice(1)} is required.`});return this.apiResponse.badResponse(o.join(" "))}let t=await this.portfolioService.retrieveAllPortfolios(r.data);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveAdminPortfolioList(){try{let e=await this.portfolioService.retrieveAllPortfoliosIdsNamesAndSlugs();return this.apiResponse.sendResponse(e)}catch(e){return this.apiResponse.sendResponse(e)}}async retrieveLastPortfolio(){try{let e=await this.portfolioService.retrieveLastPortfolio();return this.apiResponse.sendResponse(e)}catch(e){return this.apiResponse.sendResponse(e)}}async update(){try{let{body:e,params:r,user:t}=this.request,o=Lt.partial().safeParse(e);if(!o.success)return this.apiResponse.badResponse(o.error.errors.map(d=>d.message).join(" "));let i=Number(r.identifier);o.data.slug&&(o.data.slug=(await this.portfolioService.validateSlug(o.data.slug,i)).data);let c={...o.data,galleryImages:o.data.galleryImages||[],authorId:Number(t?.id)},p=await this.portfolioService.updatePortfolio(i,c);return this.apiResponse.sendResponse(p)}catch(e){return this.apiResponse.sendResponse(e)}}async delete(){try{let{params:e}=this.request,r=Number(e.identifier),t=await this.portfolioService.deletePortfolio(r);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}};var rn=(()=>{let s=To.Router();return s.route("").get(async(e,r)=>{new fe(e,r).retrieveAll();}).post(f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new fe(e,r).create();}),s.get("/admin/list",f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new fe(e,r).retrieveAdminPortfolioList();}),s.get("/last",f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new fe(e,r).retrieveLastPortfolio();}),s.route("/:identifier").get(async(e,r)=>{new fe(e,r).retrieve();}).put(f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new fe(e,r).update();}).delete(f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new fe(e,r).delete();}),s})();var Qt=s=>{let e=j(s);return z$1.preprocess(r=>({...e.parse(r),roleQuery:r.roleQuery?String(r.roleQuery):void 0}),z$1.object({...e.innerType().shape,roleQuery:He("Role query",hr.enumValues).optional()}))};z$1.object({ids:z$1.string().optional().transform(s=>s?s.split(","):[]).refine(s=>s.length===0||s.every(e=>!isNaN(Number(e))),{message:"Invalid User IDs"}).transform(s=>s.map(Number))});var Wt=z$1.object({username:Wr,email:De,name:h("Name"),emailVerified:Zs("Email Verified"),role:He("Role",hr.enumValues)}),tn=z$1.object({userId:b("User ID"),password:qe});var Ur=class extends _{sortingHelper;paymentService;walletService;constructor(){super(),this.sortingHelper=new P(u),this.paymentService=new me,this.walletService=new le;}async preventDuplicateUsernameOrEmail(e,r){return e&&await this.db.query.users.findFirst({where:eq(u.username,e)})?n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Username already exists"):r&&await this.db.query.users.findFirst({where:eq(u.email,r)})?n.createRejectResponse(a.HTTP_400_BAD_REQUEST,"Email already exists"):n.createResponse(a.HTTP_200_OK,"Username and email are unique",true)}async create(e){try{await this.preventDuplicateUsernameOrEmail(e.username,e.email);let r=await this.db.insert(u).values(e).returning().then(t=>t[0]);return n.createResponse(a.HTTP_201_CREATED,"User created successfully",r)}catch(r){return n.createErrorResponse(r)}}async retrieveOne(e){try{let r=await this.db.query.users.findFirst({where:eq(u.id,e)});return r?n.createResponse(a.HTTP_200_OK,"User retrieved successfully",r):n.createRejectResponse(a.HTTP_404_NOT_FOUND,"User not found")}catch(r){return n.createErrorResponse(r)}}async retrieve(e){try{let r=this.sortingHelper.applySorting(e.sortingMethod,e.sortBy);if(!e.page||!e.limit)return await this.retrieveAll(e.sortingMethod,e.sortBy);let t=e.from?new Date(e.from):void 0,o=e.to?new Date(e.to):void 0;o&&o.setHours(23,59,59,999);let i=[e.search?or(ilike(u.name,`%${e.search}%`),ilike(u.email,`%${e.search}%`),ilike(u.username,`%${e.search}%`)):void 0,e.roleQuery?eq(u.role,e.roleQuery):void 0,t?gte(u.createdAt,t):void 0,o?lte(u.createdAt,o):void 0].filter(Boolean),c=i.length>0?and(...i):void 0,p=await this.db.select({count:count()}).from(u).where(c).then(v=>v[0].count),{pagination:d,offset:T}=new x(e.page,e.limit,p).createPagination(),y=await this.db.query.users.findMany({where:c,limit:e.limit?e.limit:void 0,offset:e.limit?T:void 0,orderBy:r});return n.createResponse(a.HTTP_200_OK,"Users retrieved successfully",y,d)}catch(r){return n.createErrorResponse(r)}}async retrieveAll(e,r){try{let t=this.sortingHelper.applySorting(e,r),o=await this.db.query.users.findMany({orderBy:t});return n.createResponse(a.HTTP_200_OK,"Users retrieved successfully",o)}catch(t){return n.createErrorResponse(t)}}async update(e,r){try{let{emailVerified:t,...o}=r,i=await this.retrieveOne(e),c=await this.db.update(u).set({...o,emailVerified:i.data.emailVerified?i.data.emailVerified:null}).where(eq(u.id,e)).returning().then(p=>p[0]);return n.createResponse(a.HTTP_200_OK,"User updated successfully",c)}catch(t){return n.createErrorResponse(t)}}async delete(e){try{return await this.db.delete(u).where(eq(u.id,e)).returning(),n.createResponse(a.HTTP_200_OK,"User deleted successfully",!0)}catch(r){return n.createErrorResponse(r)}}async deleteAll(e){try{return e&&e.length>0?(await this.db.delete(u).where(inArray(u.id,e)).returning(),n.createResponse(a.HTTP_200_OK,"Users deleted successfully",!0)):(await this.db.delete(u).returning(),n.createResponse(a.HTTP_200_OK,"All users deleted successfully",!0))}catch(r){return n.createErrorResponse(r)}}async updatePassword(e,r){try{let t=await hash(r,10),o=await this.db.update(u).set({password:t}).where(eq(u.id,e)).returning().then(i=>i[0]);return n.createResponse(a.HTTP_200_OK,"Password updated successfully",o)}catch(t){return n.createErrorResponse(t)}}async overview(e){try{await this.retrieveOne(e);let r=await this.walletService.retrieveWalletBalance(e),t=await this.paymentService.userPortfolioValue(e),o=await this.db.select({totalShares:sum(l.investedShares)}).from(l).where(and(eq(l.userId,e),eq(l.status,"COMPLETED"))).then(N=>N[0]),i=Number(o.totalShares)||0,p=(await this.db.select({investedShares:l.investedShares,amount:l.amount,type:l.type}).from(l).where(eq(l.status,"COMPLETED"))).reduce((N,A)=>N+A.investedShares,0),T=await this.db.select({remainingShares:m.remainingShares}).from(m).then(N=>N.reduce((A,Ae)=>A+Ae.remainingShares,0)),y=p+T,v={dividendGrowth:10,wallet:{balance:r.data.balance,cashIn:r.data.cashIn,cashOut:r.data.cashOut},portfolioValue:t.data,numberOfShares:i,totalShares:{amount:y,sold:p,unsold:T}};return n.createResponse(a.HTTP_200_OK,"User overview retrieved successfully",v)}catch(r){return n.createErrorResponse(r)}}async adminOverview(){try{let e=await this.db.select({investedShares:l.investedShares,amount:l.amount,type:l.type}).from(l).where(eq(l.status,"COMPLETED")),r=e.reduce((y,v)=>y+v.investedShares,0),t=e.reduce((y,v)=>y+v.amount,0),o=await this.db.select({count:count()}).from(u).where(eq(u.role,"INVESTOR")).then(y=>y[0].count),i=o>0?t/o:0,p=await this.db.select({remainingShares:m.remainingShares}).from(m).then(y=>y.reduce((v,N)=>v+N.remainingShares,0)),d=r+p,T={amountRaised:t,numberOfSharesSold:r,numberOfInvestors:o,averageInvestment:i,unsoldShares:p,totalShares:{amount:d,sold:r,unsold:p}};return n.createResponse(a.HTTP_200_OK,"Admin overview retrieved successfully",T)}catch(e){return n.createErrorResponse(e)}}async retrieveInvestors(e){try{let r=this.sortingHelper.applySorting(e.sortingMethod,e.sortBy);if(!e.page||!e.limit){let A=await this.db.query.users.findMany({orderBy:r}),Ae=await this.db.select({shares:m.shares}).from(m).then(ee=>ee.reduce((rr,Ce)=>rr+Ce.shares,0)),er=await Promise.all(A.map(async ee=>{let rr=await this.db.select({investedShares:l.investedShares,amount:l.amount,type:l.type}).from(l).where(and(eq(l.userId,ee.id),eq(l.status,"COMPLETED"))),Ce=rr.reduce((at,ct)=>at+ct.investedShares,0),mr=rr.reduce((at,ct)=>at+ct.amount,0),Sn=Ae>0?parseFloat((Ce/Ae*100).toFixed(2)):0;return {id:ee.id,name:ee.name,email:ee.email,username:ee.username,role:ee.role,createdAt:ee.createdAt,updatedAt:ee.updatedAt,totalPurchasedShareAmount:mr,totalPurchasedShares:Ce,totalPurchasedSharePercentage:Sn}}));return n.createResponse(a.HTTP_200_OK,"All investors retrieved successfully with individual metrics",er)}let t=e.from?new Date(e.from):void 0,o=e.to?new Date(e.to):void 0;o&&o.setHours(23,59,59,999);let i=[e.search?or(ilike(u.name,`%${e.search}%`),ilike(u.email,`%${e.search}%`),ilike(u.username,`%${e.search}%`)):void 0,e.roleQuery?eq(u.role,e.roleQuery):void 0,t?gte(u.createdAt,t):void 0,o?lte(u.createdAt,o):void 0].filter(Boolean),c=i.length>0?and(...i):void 0,p=await this.db.select({count:count()}).from(u).where(c).then(A=>A[0].count),{pagination:d,offset:T}=new x(e.page,e.limit,p).createPagination(),y=await this.db.query.users.findMany({where:c,limit:e.limit?e.limit:void 0,offset:e.limit?T:void 0,orderBy:r}),v=await this.db.select({shares:m.shares}).from(m).then(A=>A.reduce((Ae,er)=>Ae+er.shares,0)),N=await Promise.all(y.map(async A=>{let Ae=await this.db.select({investedShares:l.investedShares,amount:l.amount,type:l.type}).from(l).where(and(eq(l.userId,A.id),eq(l.status,"COMPLETED"))),er=Ae.reduce((Ce,mr)=>Ce+mr.investedShares,0),ee=Ae.reduce((Ce,mr)=>Ce+mr.amount,0),rr=v>0?parseFloat((er/v*100).toFixed(2)):0;return {id:A.id,name:A.name,email:A.email,username:A.username,role:A.role,createdAt:A.createdAt,updatedAt:A.updatedAt,totalPurchasedShareAmount:ee,totalPurchasedShares:er,totalPurchasedSharePercentage:rr}}));return n.createResponse(a.HTTP_200_OK,"Investors retrieved successfully with individual metrics",N,d)}catch(r){return n.createErrorResponse(r)}}};var X=class extends E{sortingHelper;userService;constructor(e,r){super(e,r),this.sortingHelper=new P(u),this.userService=new Ur;}async index(){try{let{query:e}=this.request,r=Qt(this.sortingHelper).safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.userService.retrieve(r.data);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async show(){try{let{params:e}=this.request,r=Number(e.id);if(isNaN(r))return this.apiResponse.badResponse("Invalid user ID");let t=await this.userService.retrieveOne(r);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async create(){try{let{body:e}=this.request,r=Wt.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(i=>i.message).join(" "));let t={...r.data,emailVerified:r.data.emailVerified?new Date:null,password:null,image:null},o=await this.userService.create(t);return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async update(){try{let{params:e,body:r}=this.request,t=Number(e.id);if(isNaN(t))return this.apiResponse.badResponse("Invalid user ID");let o=Wt.safeParse(r);if(!o.success)return this.apiResponse.badResponse(o.error.errors.map(p=>p.message).join(" "));let i={...o.data,password:null,image:null},c=await this.userService.update(t,i);return this.apiResponse.sendResponse(c)}catch(e){return this.apiResponse.sendResponse(e)}}async delete(){try{let{params:e}=this.request,r=Number(e.id);if(isNaN(r))return this.apiResponse.badResponse("Invalid user ID");let t=await this.userService.delete(r);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async destroy(){try{let{query:e}=this.request,t=(e.ids?Array.isArray(e.ids)?e.ids:[e.ids]:[]).map(i=>Number(i)).filter(i=>!isNaN(i)),o=await this.userService.deleteAll(t);return this.apiResponse.sendResponse(o)}catch(e){return this.apiResponse.sendResponse(e)}}async updatePassword(){try{let{body:e}=this.request,r=tn.safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.userService.updatePassword(r.data.userId,r.data.password);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}async overview(){try{let e=Number(this.request.user?.id),r=await this.userService.overview(e);return this.apiResponse.sendResponse(r)}catch(e){return this.apiResponse.sendResponse(e)}}async adminOverview(){try{let e=await this.userService.adminOverview();return this.apiResponse.sendResponse(e)}catch(e){return this.apiResponse.sendResponse(e)}}async investors(){try{let{query:e}=this.request,r=Qt(this.sortingHelper).safeParse(e);if(!r.success)return this.apiResponse.badResponse(r.error.errors.map(o=>o.message).join(" "));let t=await this.userService.retrieveInvestors(r.data);return this.apiResponse.sendResponse(t)}catch(e){return this.apiResponse.sendResponse(e)}}};var an=(()=>{let s=To.Router();return s.route("").get(f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new X(e,r).index();}).post(f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new X(e,r).create();}).delete(f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new X(e,r).delete();}),s.get("/investors",f,async(e,r)=>{new X(e,r).investors();}),s.get("/overview",f,async(e,r)=>{new X(e,r).overview();}),s.get("/admin/overview",f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new X(e,r).adminOverview();}),s.put("/password",f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new X(e,r).updatePassword();}),s.route("/:id").get(f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new X(e,r).show();}).put(f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new X(e,r).update();}).delete(f,(e,r,t)=>new I(e,r,t).isAdmin(),async(e,r)=>{new X(e,r).delete();}),s})();var Hr=class extends E{sortingHelper;walletService;constructor(e,r){super(e,r),this.sortingHelper=new P(m),this.walletService=new le;}async retrieveUserWallet(){try{let{query:e}=this.request,r=ho(this.sortingHelper).safeParse(e);if(!r.success){let c=r.error.issues.map(p=>{let d=p.path.join(".");return `${d.charAt(0).toUpperCase()+d.slice(1)} is required.`});return this.apiResponse.badResponse(c.join(" "))}let{month:t}=this.request.query,{user:o}=this.request;if(t?!!t:void 0){let c=await this.walletService.retrieveLastThreeMonthsWallet(Number(o?.id));return this.apiResponse.sendResponse(c)}else {let c=await this.walletService.retrieveWallet(Number(o?.id),r.data);return this.apiResponse.sendResponse(c)}}catch(e){return this.apiResponse.sendResponse(e)}}};var cn=(()=>{let s=To.Router();return s.get("",f,async(e,r)=>{new Hr(e,r).retrieveUserWallet();}),s})();var{generateCsrfToken:pn,validateRequest:rP,doubleCsrfProtection:un,invalidCsrfTokenError:tP}=doubleCsrf({getSecret:()=>process.env.SECRET,getSessionIdentifier:()=>process.env.SECRET,cookieName:"csrf-token",cookieOptions:{maxAge:36e5,sameSite:k.sameSiteCookieConfig().sameSite,secure:k.sameSiteCookieConfig().secure,...k.sameSiteCookieConfig().domain&&{domain:k.sameSiteCookieConfig().domain}},size:32,errorConfig:{message:"Invalid CSRF token"},getCsrfTokenFromRequest:s=>{let e=s.headers["x-csrf-token"]||s.headers["X-CSRF-Token"];return Array.isArray(e)?e[0]:e||""}});var dn=(()=>{let s=To.Router();return s.get("/",(e,r)=>{new se(r).successResponse("CSRF token generated",pn(e,r));}),s})();var ln=[{path:"",router:Co},{path:"/auth",router:vo},{path:"/onboarding",router:Ho},{path:"/portfolio",router:rn},{path:"/order",router:Yo},{path:"/dividend",router:wo},{path:"/wallet",router:cn},{path:"/plaid",router:en},{path:"/csrf-token",router:dn},{path:"/paypal",router:Xo},{path:"/payment",router:Jo},{path:"/media",router:xo},{path:"/users",router:an},{path:"/data-room",router:Po}];function Yt(s,e=""){let r=[];for(let{path:t,router:o}of ln){let i=`${e}${t}`;s.use(i,o),o.stack.forEach(c=>{c.route&&Object.keys(c.route.methods).forEach(d=>{r.push({method:d.toUpperCase(),path:`${i}${c.route.path}`});});});}}var Wa=[{path:"/order",router:Go},{path:"/auth",router:go}];function Gt(s,e="/webhook"){let r=[];for(let{path:t,router:o}of Wa){let i=`${e}${t}`;s.use(i,o),o.stack.forEach(c=>{c.route&&Object.keys(c.route.methods).forEach(d=>{r.push({method:d.toUpperCase(),path:`${i}${c.route.path}`});});});}}var qr=class extends Store{async get(e,r){try{let t=await Qe.select().from(z).where(eq(z.sessionId,e)).execute();if(!t||t.length===0)return r(null,null);let o=t[0];return new Date(o.expires)<new Date?(await this.destroy(e),r(null,null)):r(null,JSON.parse(o.sessionCookie))}catch(t){return r(t)}}async set(e,r,t){try{if(!r)return t?.();let o=JSON.stringify(r),i=r.cookie.expires||new Date(Date.now()+18e6),c=r?.passport?.user||null;await Qe.insert(z).values({sessionId:e,sessionCookie:o,userId:c,expires:i}).onConflictDoUpdate({target:z.sessionId,set:{sessionCookie:o,userId:c,expires:i}}).returning(),t?.();}catch(o){t?.(o);}}async destroy(e,r){try{await Qe.delete(z).where(eq(z.sessionId,e)).execute(),r?.();}catch(t){r?.(t);}}async touch(e,r,t){try{let o=r.cookie.expires||new Date(Date.now()+18e6);await Qe.update(z).set({expires:o}).where(eq(z.sessionId,e)).execute(),t?.();}catch{t?.();}}};var Ga=Ya({name:"session-id",secret:process.env.SECRET,saveUninitialized:false,resave:false,store:new qr,cookie:{sameSite:k.sameSiteCookieConfig().sameSite,secure:k.sameSiteCookieConfig().secure,maxAge:18e6,...k.sameSiteCookieConfig().domain&&{domain:k.sameSiteCookieConfig().domain}}}),mn=Ga;var Xt=class{clientDomain=null;serverDomain=null;setClientDomain(e){this.clientDomain=e;}getClientDomain(){return this.clientDomain}setServerDomain(e){this.serverDomain=e;}getServerDomain(){return this.serverDomain}},Ja=new Xt,Zt=Ja;var Xa=(s,e,r)=>{let t=s.secure?"https":"http",o=s.headers.origin||s.headers.referer||"Unknown",i=o!=="Unknown"?new URL(o.toString()).origin:"Unknown",c=s.headers.host?`${t}://${s.headers.host}`:"Unknown";Zt.setClientDomain(i),Zt.setServerDomain(c),r();},hn=Xa;function es(s){s.use((e,r,t,o)=>{console.error(e.stack),new se(t).sendResponse({status:a.HTTP_500_INTERNAL_SERVER_ERROR,message:e.message});});}bi.config();var $=To();$.use(sc());$.use(To.json());$.use(urlencoded({extended:true}));$.use(Za());$.use(ec(ts));pt($);$.use(hn);$.set("trust proxy",1);$.use(mn);$.use(Ct.initialize());$.use(Ct.session());Gt($);$.use(un);Ut($);Yt($);es($);var rs=$;var nc=z$1.object({PLAID_ENV:h("PLAID_ENV").refine(s=>["sandbox","production"].includes(s),"PLAID_ENV must be either 'sandbox' or 'production'"),PLAID_CLIENT_ID:h("PLAID_CLIENT_ID"),PLAID_SECRET:h("PLAID_SECRET"),PLAID_TEMPLATE_ID:h("PLAID_TEMPLATE_ID"),PLAID_CLIENT_NAME:h("PLAID_CLIENT_NAME")}),ic=z$1.object({PAYPAL_API_URL:h("PAYPAL_API_URL"),PAYPAL_CLIENT_ID:h("PAYPAL_CLIENT_ID"),PAYPAL_CLIENT_SECRET:h("PAYPAL_CLIENT_SECRET")}),ac=z$1.object({GOOGLE_CLIENT_ID:h("GOOGLE_CLIENT_ID"),GOOGLE_CLIENT_SECRET:h("GOOGLE_CLIENT_SECRET"),GOOGLE_CALLBACK_URL:h("GOOGLE_CALLBACK_URL")}),cc=z$1.object({EMAIL_SERVER_HOST:h("EMAIL_SERVER_HOST"),EMAIL_SERVER_PORT:h("EMAIL_SERVER_PORT"),EMAIL_SERVER_USER:h("EMAIL_SERVER_USER"),EMAIL_SERVER_PASSWORD:h("EMAIL_SERVER_PASSWORD"),EMAIL_FROM:h("EMAIL_FROM")}),pc=z$1.object({CLOUDINARY_CLOUD_NAME:h("CLOUDINARY_CLOUD_NAME"),CLOUDINARY_API_KEY:h("CLOUDINARY_API_KEY"),CLOUDINARY_API_SECRET:h("CLOUDINARY_API_SECRET")}),uc=z$1.object({COOKIE_DOMAIN:h("COOKIE_DOMAIN")}),dc=z$1.object({DATABASE_URL:h("DATABASE_URL"),PORT:h("PORT").refine(s=>!isNaN(Number(s)),"PORT must be a number"),SECRET:h("SECRET"),NODE_ENV:h("NODE_ENV").refine(s=>["development","production"].includes(s),"NODE_ENV must be either 'development' or 'production'"),JWT_COOKIE_NAME:h("JWT_COOKIE_NAME"),SESSION_COOKIE_NAME:h("SESSION_COOKIE_NAME"),ORIGIN_URL:h("ORIGIN_URL"),APP_URL:h("APP_URL"),API_URL:h("API_URL"),ADMIN_EMAIL:h("ADMIN_EMAIL"),...uc.shape,...ac.shape,...nc.shape,...ic.shape,...cc.shape,...pc.shape}),Rn=dc.safeParse(process.env);if(!Rn.success){let s=Rn.error.errors.map(e=>e.message).join(`
`);console.error(Ke.red(`Environment validation failed:
${s}`)),process.exit(1);}var lc=()=>{try{let s=join(process.cwd(),"package.json"),e=JSON.parse(readFileSync(s,"utf-8")),r=e.dependencies?.express||e.devDependencies?.express;if(r)return r.replace(/[\^~<>=\s]/g,"");let t=join(process.cwd(),"node_modules/express/package.json");return JSON.parse(readFileSync(t,"utf-8")).version}catch{return "unknown"}},gn=lc;var fc=gn(),yc=async()=>{let s=process.env.PORT||8080,e="production",r=t=>new Promise((o,i)=>{let c=rs.listen(t,()=>{c.close(()=>o(t));});c.on("error",p=>{p.code==="EACCES"||p.code==="EADDRINUSE"?o(r(t+1)):i(p);});});try{let t=await r(Number(s)),o=mc.address();rs.listen(t,()=>{console.log(Ke.magenta(`
\u25B2 Express.js ${fc}`)),console.log(`- Local:        http://localhost:${t}`),console.log(`- Network:      http://${o}:${t}`),console.log(`- Environment:  ${e}`),console.log();});}catch(t){console.error("Failed to start server:",t),process.exit(1);}};yc();